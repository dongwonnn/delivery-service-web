{"version":3,"sources":["compoentns/Stores.js","pages/FavoritePage.js","compoentns/Categories.js","data/stores.js","compoentns/Franchises.js","modules/Sort.js","compoentns/Search.js","compoentns/Address.js","compoentns/Banner.js","pages/HomePage.js","pages/ProfilePage.js","pages/SearchPage.js","modules/auth.js","compoentns/AuthRoute.js","pages/LoginPage.js","pages/RegisterPage.js","pages/DetailPage.js","pages/CategoryPage.js","pages/AddressPage.js","pages/ReviewPage.js","pages/OrderListPage.js","pages/CartPage.js","compoentns/Recept.js","pages/OrderHistoryPage.js","compoentns/LogoutButton.js","pages/SettingPage.js","compoentns/Postcode.js","pages/SetAddressPage.js","compoentns/Navigation.js","data/categories.js","App.js","reportWebVitals.js","index.js"],"names":["Stores","stores","Row","className","Col","map","store","to","name","grade","feedNum","deliveryCost","FavoritePage","user","likesList","length","Categories","categories","category","text","id","franchise","menu","price","detail","reqMenu","addCost","check","selectMenu","review","date","photoCheck","orderdMenu","recommand","Franchises","useState","Sort","onRecommand","onDeliveryCost","cost","onClick","Search","Address","defaultAddress","Banner","HomePage","orderList","setStores","Container","React","memo","ProfilePage","phoneNum","SearchPage","inputValue","setInputValue","sortStores","setSortStores","useEffect","valueLen","nextStores","filter","substring","type","placeholder","value","onChange","e","target","cat","users","email","password","orderHistory","addrList","building","address","subAddress","addrCat","register","push","AuthRoute","authenticated","Component","component","render","rest","props","pathname","state","from","location","LoginPage","login","history","setEmail","setPassword","src","alt","htmlFor","go","alert","RegisterPage","passwordCheck","setPasswordCheck","setName","setPhoneNum","DetailPage","match","setDetail","params","detailItem","setDetailItem","payment","setPayment","find","undefined","sum","reduce","acc","cur","totalPrice","food","CategoryPage","catStores","setCatStores","sortCat","AddressPage","setDefaultAddress","hasHomeAddress","setHasHomeAddress","hasWorkAddress","setHasWorkAddress","nextHasHomeAddress","addr","nextHasWorkAddress","ReviewPage","details","setDetails","recommandToggle","setRecommandToggle","nextDetails","upBtn","nextRecommandToggle","OrderListPage","setOrderList","count","setCount","setTotalPrice","overlap","setOverlap","foodMenu","m","defaultPrice","onToggleReqBtn","checked","onToggleSelBtn","add","v","el","selMenu","nextOrderList","mainMenu","splice","CartPage","lists","setLists","list","idx","newLists","_","index","onCloseBtn","reqMunu","orderInfo","orderMenu","orderDate","getFormatDate","delivCheck","console","log","Date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","min","getMinutes","Recept","modal","order","sumPrice","OrderHistoryPage","setModal","onModalBtn","onReviewBtn","withRouter","logout","SettingPage","Postcode","onAddressChange","onClose","onComplete","data","fullAddress","extraAddress","addressType","bname","buildingName","SetAddressPage","setAddr","setText","addressCat","setAddressCat","apiToggle","setApiToggle","innerText","nextAddr","split","indexOf","slice","Navigation","App","setUser","setRecommand","setCost","Error","singIn","useCallback","sort","a","b","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.98cf9f80.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Stores.scss';\r\nimport { AiFillStar } from 'react-icons/ai';\r\nimport { Link } from 'react-router-dom';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst Stores = ({ stores }) => {\r\n  return (\r\n    <Row className=\"hp-items\">\r\n      <Col>\r\n        {stores.map((store) => (\r\n          <div className=\"item-card\" key={store.name}>\r\n            <Link to={`/detail/${store.name}`}>\r\n              <div className=\"card-img\">\r\n                <div>이미지</div>\r\n              </div>\r\n              <div className=\"card-text\">\r\n                <div className=\"card-name\">{store.name}</div>\r\n                <div className=\"card-detail\">\r\n                  <AiFillStar />\r\n                  <p>\r\n                    {store.grade} {store.feedNum} / ({store.deliveryCost}원)\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          </div>\r\n        ))}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Stores;\r\n// {\r\n//    <div style={{ height: '150vh', textAlign: 'center' }}>\r\n// }\r\n","import React from 'react';\r\nimport Stores from '../compoentns/Stores';\r\nimport { AiFillHeart } from 'react-icons/ai';\r\n\r\nconst FavoritePage = ({ user }) => {\r\n  if (user.likesList.length === 0) {\r\n    return (\r\n      <div>\r\n        <p>즐겨찾는 맛집이 없습니다.</p>\r\n        <p>\r\n          좋아하는 맛집에 <AiFillHeart />를 눌러주세요.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>즐겨찾기</h1>\r\n      <p>총 {user.likesList.length}개</p>\r\n      <Stores stores={user.likesList} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoritePage;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Categories.scss';\r\n\r\nconst Categories = ({ categories }) => {\r\n  return (\r\n    <div className=\"hp-categorys\">\r\n      {categories.map((category) => (\r\n        <Link to={`/category/${category.text}`} key={category.name}>\r\n          <div className=\"hp-category\">\r\n            <div></div>\r\n            <p>{category.text}</p>\r\n          </div>\r\n          <hr />\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","export const store = [\r\n  {\r\n    id: 0,\r\n    name: '만랩커피 강남점',\r\n    franchise: true,\r\n    category: '카페',\r\n    grade: 2.1,\r\n    feedNum: 2526,\r\n    deliveryCost: 2000,\r\n    menu: [\r\n      {\r\n        id: 0,\r\n        name: '블랙 피넛 커피',\r\n        price: 4800,\r\n        detail: '블랙 피넛 커피',\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 1,\r\n        name: '스트로베리 밀크',\r\n        price: 4800,\r\n        detail: null,\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 2,\r\n        name: '플랫 화이트',\r\n        price: 4800,\r\n        detail: '호주식라떼 : 리스트레토 샷 + 우유',\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    review: [\r\n      {\r\n        id: 0,\r\n        user: '최땡땡',\r\n        date: '2021-02-01',\r\n        grade: 4,\r\n        photoCheck: true,\r\n        text:\r\n          '배달로 커피는 처음 시켰는데 진짜 너무너무너무 기대이상입니다! 하나도 안흔들리고 ㅋㅋ 어쩜 이렇게 매장에서 먹는 거 처럼 왔는지 ㅎㅎ 달다하고 커피맛도 좋았어요~ 또 시킬게요',\r\n        orderdMenu: '아인슈페너 (Small Size)',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 1,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 5,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 2,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 3,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 3,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 2,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 4,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 1,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 1,\r\n    name: '내가찜한닭 강남역점',\r\n    franchise: true,\r\n    category: '찜',\r\n    grade: 3.3,\r\n    feedNum: 2526,\r\n    deliveryCost: 1500,\r\n    menu: [\r\n      {\r\n        id: 0,\r\n        name: '안동찜닭',\r\n        price: 20000,\r\n        detail: '안동찜닭임',\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 1,\r\n        name: '순살안동찜닭',\r\n        price: 20000,\r\n        detail: null,\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 2,\r\n        name: '매콤순살고추장찜닭',\r\n        price: 23000,\r\n        detail: null,\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    review: [\r\n      {\r\n        id: 0,\r\n        user: '최땡땡',\r\n        date: '2021-02-01',\r\n        grade: 4,\r\n        photoCheck: true,\r\n        text: '맛있어요',\r\n        orderdMenu: '상아김밥 · 상아떡볶이 · 지단김밥',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 1,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 5,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 2,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 3,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 3,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 2,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 4,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 1,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 2,\r\n    name: '호떡당',\r\n    franchise: false,\r\n    category: '분식',\r\n    grade: 4.9,\r\n    feedNum: 2526,\r\n    deliveryCost: 2000,\r\n    menu: [\r\n      {\r\n        id: 0,\r\n        name: '블랙 피넛 커피',\r\n        price: 4800,\r\n        detail: '블랙 피넛 커피임',\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 1,\r\n        name: '스트로베리 밀크',\r\n        price: 4800,\r\n        detail: null,\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 2,\r\n        name: '플랫 화이트',\r\n        price: 4800,\r\n        detail: null,\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    review: [\r\n      {\r\n        id: 0,\r\n        user: '최땡땡',\r\n        date: '2021-02-01',\r\n        grade: 4,\r\n        photoCheck: true,\r\n        text: '맛있어요',\r\n        orderdMenu: '상아김밥 · 상아떡볶이 · 지단김밥',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 1,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 5,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 2,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 3,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 3,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 2,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 4,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 1,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 3,\r\n    name: '그 우동집 강남점',\r\n    franchise: true,\r\n    category: '분식',\r\n    grade: 1.8,\r\n    feedNum: 2526,\r\n    deliveryCost: 1000,\r\n    menu: [\r\n      {\r\n        id: 0,\r\n        name: '안동찜닭',\r\n        price: 20000,\r\n        detail: '안동찜닭임',\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 1,\r\n        name: '순살안동찜닭',\r\n        price: 20000,\r\n        detail: null,\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 2,\r\n        name: '매콤순살고추장찜닭',\r\n        price: 23000,\r\n        detail: null,\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    review: [\r\n      {\r\n        id: 0,\r\n        user: '최땡땡',\r\n        date: '2021-02-01',\r\n        grade: 4,\r\n        photoCheck: true,\r\n        text: '맛있어요',\r\n        orderdMenu: '상아김밥 · 상아떡볶이 · 지단김밥',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 1,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 5,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 2,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 3,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 3,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 2,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 4,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 1,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 4,\r\n    name: '아우어커피 강남점',\r\n    franchise: false,\r\n    category: '카페',\r\n    grade: 3.2,\r\n    feedNum: 2526,\r\n    deliveryCost: 4000,\r\n    menu: [\r\n      {\r\n        id: 0,\r\n        name: '블랙 피넛 커피',\r\n        price: 4800,\r\n        detail: '블랙 피넛 커피임',\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 1,\r\n        name: '스트로베리 밀크',\r\n        price: 4800,\r\n        detail: null,\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 2,\r\n        name: '플랫 화이트',\r\n        price: 4800,\r\n        detail: null,\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    review: [\r\n      {\r\n        id: 0,\r\n        user: '최땡땡',\r\n        date: '2021-02-01',\r\n        grade: 4,\r\n        photoCheck: true,\r\n        text: '맛있어요',\r\n        orderdMenu: '상아김밥 · 상아떡볶이 · 지단김밥',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 1,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 5,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 2,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 3,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 3,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 2,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 4,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 1,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 5,\r\n    name: '맘스터치 논현아이파크점',\r\n    franchise: true,\r\n    category: '패스트푸드',\r\n    grade: 2.7,\r\n    feedNum: 2526,\r\n    deliveryCost: 3500,\r\n    menu: [\r\n      {\r\n        id: 0,\r\n        name: '안동찜닭',\r\n        price: 20000,\r\n        detail: '안동찜닭임',\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 1,\r\n        name: '순살안동찜닭',\r\n        price: 20000,\r\n        detail: null,\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 2,\r\n        name: '매콤순살고추장찜닭',\r\n        price: 23000,\r\n        detail: null,\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    review: [\r\n      {\r\n        id: 0,\r\n        user: '최땡땡',\r\n        date: '2021-02-01',\r\n        grade: 4,\r\n        photoCheck: true,\r\n        text: '맛있어요',\r\n        orderdMenu: '상아김밥 · 상아떡볶이 · 지단김밥',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 1,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 5,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 2,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 3,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 3,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 2,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 4,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 1,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 6,\r\n    name: '용봉대반점 서초점',\r\n    franchise: true,\r\n    category: '중식',\r\n    grade: 3.7,\r\n    feedNum: 2526,\r\n    deliveryCost: 2000,\r\n    menu: [\r\n      {\r\n        id: 0,\r\n        name: '블랙 피넛 커피',\r\n        price: 4800,\r\n        detail: '블랙 피넛 커피임',\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 1,\r\n        name: '스트로베리 밀크',\r\n        price: 4800,\r\n        detail: null,\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 2,\r\n        name: '플랫 화이트',\r\n        price: 4800,\r\n        detail: null,\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    review: [\r\n      {\r\n        id: 0,\r\n        user: '최땡땡',\r\n        date: '2021-02-01',\r\n        grade: 4,\r\n        photoCheck: true,\r\n        text: '맛있어요',\r\n        orderdMenu: '상아김밥 · 상아떡볶이 · 지단김밥',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 1,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 5,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 2,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 3,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 3,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 2,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 4,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 1,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 7,\r\n    name: '파스파스타 강남역점',\r\n    franchise: false,\r\n    category: '양식',\r\n    grade: 2.6,\r\n    feedNum: 2526,\r\n    deliveryCost: 5000,\r\n    menu: [\r\n      {\r\n        id: 0,\r\n        name: '안동찜닭',\r\n        price: 20000,\r\n        detail: '안동찜닭임',\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 1,\r\n        name: '순살안동찜닭',\r\n        price: 20000,\r\n        detail: null,\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 2,\r\n        name: '매콤순살고추장찜닭',\r\n        price: 23000,\r\n        detail: null,\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    review: [\r\n      {\r\n        id: 0,\r\n        user: '최땡땡',\r\n        date: '2021-02-01',\r\n        grade: 4,\r\n        photoCheck: true,\r\n        text: '맛있어요',\r\n        orderdMenu: '상아김밥 · 상아떡볶이 · 지단김밥',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 1,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 5,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 2,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 3,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 3,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 2,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 4,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 1,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 8,\r\n    name: '돈카살롱 강남점',\r\n    franchise: true,\r\n    category: '돈가스',\r\n    grade: 4,\r\n    feedNum: 2526,\r\n    deliveryCost: 3500,\r\n    menu: [\r\n      {\r\n        id: 0,\r\n        name: '블랙 피넛 커피',\r\n        price: 4800,\r\n        detail: '블랙 피넛 커피임',\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 1,\r\n        name: '스트로베리 밀크',\r\n        price: 4800,\r\n        detail: null,\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 2,\r\n        name: '플랫 화이트',\r\n        price: 4800,\r\n        detail: null,\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    review: [\r\n      {\r\n        id: 0,\r\n        user: '최땡땡',\r\n        date: '2021-02-01',\r\n        grade: 4,\r\n        photoCheck: true,\r\n        text: '맛있어요',\r\n        orderdMenu: '상아김밥 · 상아떡볶이 · 지단김밥',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 1,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 5,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 2,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 3,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 3,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 2,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 4,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 1,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 9,\r\n    name: '나무인생초밥 삼성타운점',\r\n    franchise: true,\r\n    category: '일식',\r\n    grade: 4.2,\r\n    feedNum: 2526,\r\n    deliveryCost: 2000,\r\n    menu: [\r\n      {\r\n        id: 0,\r\n        name: '안동찜닭',\r\n        price: 20000,\r\n        detail: '안동찜닭임',\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 1,\r\n        name: '순살안동찜닭',\r\n        price: 20000,\r\n        detail: null,\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 2,\r\n        name: '매콤순살고추장찜닭',\r\n        price: 23000,\r\n        detail: null,\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    review: [\r\n      {\r\n        id: 0,\r\n        user: '최땡땡',\r\n        date: '2021-02-01',\r\n        grade: 4,\r\n        photoCheck: true,\r\n        text: '맛있어요',\r\n        orderdMenu: '상아김밥 · 상아떡볶이 · 지단김밥',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 1,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 5,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 2,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 3,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 3,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 2,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 4,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 1,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 10,\r\n    name: '만랩커피 논현점',\r\n    franchise: true,\r\n    category: '카페',\r\n    grade: 2.1,\r\n    feedNum: 2526,\r\n    deliveryCost: 2000,\r\n    menu: [\r\n      {\r\n        id: 0,\r\n        name: '블랙 피넛 커피',\r\n        price: 4800,\r\n        detail: '블랙 피넛 커피',\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 1,\r\n        name: '스트로베리 밀크',\r\n        price: 4800,\r\n        detail: null,\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 2,\r\n        name: '플랫 화이트',\r\n        price: 4800,\r\n        detail: '호주식라떼 : 리스트레토 샷 + 우유',\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    review: [\r\n      {\r\n        id: 0,\r\n        user: '최땡땡',\r\n        date: '2021-02-01',\r\n        grade: 4,\r\n        photoCheck: true,\r\n        text:\r\n          '배달로 커피는 처음 시켰는데 진짜 너무너무너무 기대이상입니다! 하나도 안흔들리고 ㅋㅋ 어쩜 이렇게 매장에서 먹는 거 처럼 왔는지 ㅎㅎ 달다하고 커피맛도 좋았어요~ 또 시킬게요',\r\n        orderdMenu: '아인슈페너 (Small Size)',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 1,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 5,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 2,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 3,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 3,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 2,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 4,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 1,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 11,\r\n    name: '이천쌀밥 강남점',\r\n    franchise: true,\r\n    category: '한식',\r\n    grade: 2.0,\r\n    feedNum: 2526,\r\n    deliveryCost: 5000,\r\n    menu: [\r\n      {\r\n        id: 0,\r\n        name: '블랙 피넛 커피',\r\n        price: 4800,\r\n        detail: '블랙 피넛 커피',\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 1,\r\n        name: '스트로베리 밀크',\r\n        price: 4800,\r\n        detail: null,\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 2,\r\n        name: '플랫 화이트',\r\n        price: 4800,\r\n        detail: '호주식라떼 : 리스트레토 샷 + 우유',\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    review: [\r\n      {\r\n        id: 0,\r\n        user: '최땡땡',\r\n        date: '2021-02-01',\r\n        grade: 4,\r\n        photoCheck: true,\r\n        text:\r\n          '배달로 커피는 처음 시켰는데 진짜 너무너무너무 기대이상입니다! 하나도 안흔들리고 ㅋㅋ 어쩜 이렇게 매장에서 먹는 거 처럼 왔는지 ㅎㅎ 달다하고 커피맛도 좋았어요~ 또 시킬게요',\r\n        orderdMenu: '아인슈페너 (Small Size)',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 1,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 5,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 2,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 3,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 3,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 2,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 4,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 1,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 12,\r\n    name: '산들해 강남점',\r\n    franchise: true,\r\n    category: '한식',\r\n    grade: 3.0,\r\n    feedNum: 2526,\r\n    deliveryCost: 2500,\r\n    menu: [\r\n      {\r\n        id: 0,\r\n        name: '블랙 피넛 커피',\r\n        price: 4800,\r\n        detail: '블랙 피넛 커피',\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 1,\r\n        name: '스트로베리 밀크',\r\n        price: 4800,\r\n        detail: null,\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 2,\r\n        name: '플랫 화이트',\r\n        price: 4800,\r\n        detail: '호주식라떼 : 리스트레토 샷 + 우유',\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    review: [\r\n      {\r\n        id: 0,\r\n        user: '최땡땡',\r\n        date: '2021-02-01',\r\n        grade: 4,\r\n        photoCheck: true,\r\n        text:\r\n          '배달로 커피는 처음 시켰는데 진짜 너무너무너무 기대이상입니다! 하나도 안흔들리고 ㅋㅋ 어쩜 이렇게 매장에서 먹는 거 처럼 왔는지 ㅎㅎ 달다하고 커피맛도 좋았어요~ 또 시킬게요',\r\n        orderdMenu: '아인슈페너 (Small Size)',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 1,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 5,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 2,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 3,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 3,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 2,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 4,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 1,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 13,\r\n    name: '라연',\r\n    franchise: true,\r\n    category: '한식',\r\n    grade: 2.1,\r\n    feedNum: 2526,\r\n    deliveryCost: 2000,\r\n    menu: [\r\n      {\r\n        id: 0,\r\n        name: '블랙 피넛 커피',\r\n        price: 4800,\r\n        detail: '블랙 피넛 커피',\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 1,\r\n        name: '스트로베리 밀크',\r\n        price: 4800,\r\n        detail: null,\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 2,\r\n        name: '플랫 화이트',\r\n        price: 4800,\r\n        detail: '호주식라떼 : 리스트레토 샷 + 우유',\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    review: [\r\n      {\r\n        id: 0,\r\n        user: '최땡땡',\r\n        date: '2021-02-01',\r\n        grade: 4,\r\n        photoCheck: true,\r\n        text:\r\n          '배달로 커피는 처음 시켰는데 진짜 너무너무너무 기대이상입니다! 하나도 안흔들리고 ㅋㅋ 어쩜 이렇게 매장에서 먹는 거 처럼 왔는지 ㅎㅎ 달다하고 커피맛도 좋았어요~ 또 시킬게요',\r\n        orderdMenu: '아인슈페너 (Small Size)',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 1,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 5,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 2,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 3,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 3,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 2,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 4,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 1,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 14,\r\n    name: '서서갈비 강남점',\r\n    franchise: true,\r\n    category: '한식',\r\n    grade: 2.1,\r\n    feedNum: 2526,\r\n    deliveryCost: 2000,\r\n    menu: [\r\n      {\r\n        id: 0,\r\n        name: '블랙 피넛 커피',\r\n        price: 4800,\r\n        detail: '블랙 피넛 커피',\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 1,\r\n        name: '스트로베리 밀크',\r\n        price: 4800,\r\n        detail: null,\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 2,\r\n        name: '플랫 화이트',\r\n        price: 4800,\r\n        detail: '호주식라떼 : 리스트레토 샷 + 우유',\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    review: [\r\n      {\r\n        id: 0,\r\n        user: '최땡땡',\r\n        date: '2021-02-01',\r\n        grade: 4,\r\n        photoCheck: true,\r\n        text:\r\n          '배달로 커피는 처음 시켰는데 진짜 너무너무너무 기대이상입니다! 하나도 안흔들리고 ㅋㅋ 어쩜 이렇게 매장에서 먹는 거 처럼 왔는지 ㅎㅎ 달다하고 커피맛도 좋았어요~ 또 시킬게요',\r\n        orderdMenu: '아인슈페너 (Small Size)',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 1,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 5,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 2,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 3,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 3,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 2,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 4,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 1,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 15,\r\n    name: '쿠우쿠우 강남점',\r\n    franchise: true,\r\n    category: '한식',\r\n    grade: 2.1,\r\n    feedNum: 2526,\r\n    deliveryCost: 2000,\r\n    menu: [\r\n      {\r\n        id: 0,\r\n        name: '블랙 피넛 커피',\r\n        price: 4800,\r\n        detail: '블랙 피넛 커피',\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 1,\r\n        name: '스트로베리 밀크',\r\n        price: 4800,\r\n        detail: null,\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 2,\r\n        name: '플랫 화이트',\r\n        price: 4800,\r\n        detail: '호주식라떼 : 리스트레토 샷 + 우유',\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    review: [\r\n      {\r\n        id: 0,\r\n        user: '최땡땡',\r\n        date: '2021-02-01',\r\n        grade: 4,\r\n        photoCheck: true,\r\n        text:\r\n          '배달로 커피는 처음 시켰는데 진짜 너무너무너무 기대이상입니다! 하나도 안흔들리고 ㅋㅋ 어쩜 이렇게 매장에서 먹는 거 처럼 왔는지 ㅎㅎ 달다하고 커피맛도 좋았어요~ 또 시킬게요',\r\n        orderdMenu: '아인슈페너 (Small Size)',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 1,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 5,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 2,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 3,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 3,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 2,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 4,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 1,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 16,\r\n    name: '미소야 강남점',\r\n    franchise: true,\r\n    category: '한식',\r\n    grade: 2.1,\r\n    feedNum: 2526,\r\n    deliveryCost: 2000,\r\n    menu: [\r\n      {\r\n        id: 0,\r\n        name: '블랙 피넛 커피',\r\n        price: 4800,\r\n        detail: '블랙 피넛 커피',\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 1,\r\n        name: '스트로베리 밀크',\r\n        price: 4800,\r\n        detail: null,\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 2,\r\n        name: '플랫 화이트',\r\n        price: 4800,\r\n        detail: '호주식라떼 : 리스트레토 샷 + 우유',\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    review: [\r\n      {\r\n        id: 0,\r\n        user: '최땡땡',\r\n        date: '2021-02-01',\r\n        grade: 4,\r\n        photoCheck: true,\r\n        text:\r\n          '배달로 커피는 처음 시켰는데 진짜 너무너무너무 기대이상입니다! 하나도 안흔들리고 ㅋㅋ 어쩜 이렇게 매장에서 먹는 거 처럼 왔는지 ㅎㅎ 달다하고 커피맛도 좋았어요~ 또 시킬게요',\r\n        orderdMenu: '아인슈페너 (Small Size)',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 1,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 5,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 2,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 3,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 3,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 2,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 4,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 1,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 17,\r\n    name: '김밥천국 강남점',\r\n    franchise: true,\r\n    category: '1인분',\r\n    grade: 2.1,\r\n    feedNum: 2526,\r\n    deliveryCost: 2000,\r\n    menu: [\r\n      {\r\n        id: 0,\r\n        name: '블랙 피넛 커피',\r\n        price: 4800,\r\n        detail: '블랙 피넛 커피',\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 1,\r\n        name: '스트로베리 밀크',\r\n        price: 4800,\r\n        detail: null,\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 2,\r\n        name: '플랫 화이트',\r\n        price: 4800,\r\n        detail: '호주식라떼 : 리스트레토 샷 + 우유',\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    review: [\r\n      {\r\n        id: 0,\r\n        user: '최땡땡',\r\n        date: '2021-02-01',\r\n        grade: 4,\r\n        photoCheck: true,\r\n        text:\r\n          '배달로 커피는 처음 시켰는데 진짜 너무너무너무 기대이상입니다! 하나도 안흔들리고 ㅋㅋ 어쩜 이렇게 매장에서 먹는 거 처럼 왔는지 ㅎㅎ 달다하고 커피맛도 좋았어요~ 또 시킬게요',\r\n        orderdMenu: '아인슈페너 (Small Size)',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 1,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 5,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 2,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 3,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 3,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 2,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 4,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 1,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 18,\r\n    name: '교촌치킨 강남점',\r\n    franchise: true,\r\n    category: '치킨',\r\n    grade: 2.1,\r\n    feedNum: 2526,\r\n    deliveryCost: 2000,\r\n    menu: [\r\n      {\r\n        id: 0,\r\n        name: '블랙 피넛 커피',\r\n        price: 4800,\r\n        detail: '블랙 피넛 커피',\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 1,\r\n        name: '스트로베리 밀크',\r\n        price: 4800,\r\n        detail: null,\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 2,\r\n        name: '플랫 화이트',\r\n        price: 4800,\r\n        detail: '호주식라떼 : 리스트레토 샷 + 우유',\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    review: [\r\n      {\r\n        id: 0,\r\n        user: '최땡땡',\r\n        date: '2021-02-01',\r\n        grade: 4,\r\n        photoCheck: true,\r\n        text:\r\n          '배달로 커피는 처음 시켰는데 진짜 너무너무너무 기대이상입니다! 하나도 안흔들리고 ㅋㅋ 어쩜 이렇게 매장에서 먹는 거 처럼 왔는지 ㅎㅎ 달다하고 커피맛도 좋았어요~ 또 시킬게요',\r\n        orderdMenu: '아인슈페너 (Small Size)',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 1,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 5,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 2,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 3,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 3,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 2,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 4,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 1,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 19,\r\n    name: '가장맛있는 족발 강남점',\r\n    franchise: true,\r\n    category: '족발',\r\n    grade: 2.1,\r\n    feedNum: 2526,\r\n    deliveryCost: 2000,\r\n    menu: [\r\n      {\r\n        id: 0,\r\n        name: '블랙 피넛 커피',\r\n        price: 4800,\r\n        detail: '블랙 피넛 커피',\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 1,\r\n        name: '스트로베리 밀크',\r\n        price: 4800,\r\n        detail: null,\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        id: 2,\r\n        name: '플랫 화이트',\r\n        price: 4800,\r\n        detail: '호주식라떼 : 리스트레토 샷 + 우유',\r\n        reqMenu: [\r\n          {\r\n            id: 0,\r\n            text: '순한맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '보통맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 2,\r\n            text: '매운맛',\r\n            addCost: 0,\r\n            check: false,\r\n          },\r\n        ],\r\n        selectMenu: [\r\n          {\r\n            id: 0,\r\n            text: '스콘',\r\n            addCost: 1000,\r\n            check: false,\r\n          },\r\n          {\r\n            id: 1,\r\n            text: '쿠키',\r\n            addCost: 1500,\r\n            check: false,\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n    review: [\r\n      {\r\n        id: 0,\r\n        user: '최땡땡',\r\n        date: '2021-02-01',\r\n        grade: 4,\r\n        photoCheck: true,\r\n        text:\r\n          '배달로 커피는 처음 시켰는데 진짜 너무너무너무 기대이상입니다! 하나도 안흔들리고 ㅋㅋ 어쩜 이렇게 매장에서 먹는 거 처럼 왔는지 ㅎㅎ 달다하고 커피맛도 좋았어요~ 또 시킬게요',\r\n        orderdMenu: '아인슈페너 (Small Size)',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 1,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 5,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 2,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 3,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 3,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 2,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n      {\r\n        id: 4,\r\n        user: '김땡땡',\r\n        date: '2021-01-30',\r\n        grade: 1,\r\n        photoCheck: true,\r\n        text: '굿굿',\r\n        orderdMenu:\r\n          '오리지널 콜드브루 · 요거트 스무디 · 화이트 청크 딜라이트 쿠키 · 더블 코코아 화이트 초코 쿠키',\r\n        recommand: 1,\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AiFillStar } from 'react-icons/ai';\r\nimport { BsArrowRight } from 'react-icons/bs';\r\nimport './Franchises.scss';\r\nimport { Link } from 'react-router-dom';\r\n// import axios from 'axios';\r\nimport { store } from '../data/stores';\r\n\r\nconst Franchises = () => {\r\n  const [stores, setStores] = useState(store);\r\n\r\n  // useEffect(() => {\r\n  //   const fetchData = async () => {\r\n  //     try {\r\n  //       const response = await axios.get('http://localhost:4000/stores');\r\n\r\n  //       setStores(response.data);\r\n  //     } catch (e) {\r\n  //       console.log(e);\r\n  //     }\r\n  //   };\r\n  //   fetchData();\r\n  // }, []);\r\n\r\n  return (\r\n    <div className=\"hp-recommand\">\r\n      <div className=\"hp-recommand-header\">\r\n        <p>인기 프랜차이즈</p>\r\n        <BsArrowRight className=\"arrow-right\" />\r\n      </div>\r\n      <div className=\"hp-recommand-lists\">\r\n        {stores.map(\r\n          (store) =>\r\n            store.franchise && (\r\n              <Link to={`/detail/${store.name}`} key={store.name}>\r\n                <div className=\"hp-recommand-list\">\r\n                  <div className=\"list-img\">이미지</div>\r\n                  <p className=\"list-name\">{store.name}</p>\r\n                  <div className=\"list-detail\">\r\n                    <AiFillStar />\r\n                    <p>\r\n                      {store.grade} ({store.feedNum})\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            ),\r\n        )}\r\n      </div>\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Franchises;\r\n","import React from 'react';\r\nimport './Sort.scss';\r\nimport { IoIosArrowDown, IoIosArrowUp } from 'react-icons/io';\r\n\r\nconst Sort = ({ onRecommand, recommand, onDeliveryCost, cost }) => {\r\n  return (\r\n    <div className=\"hp-sort\">\r\n      <ul>\r\n        <li onClick={() => onRecommand()}>\r\n          <div>추천순</div>\r\n          {recommand ? <IoIosArrowDown /> : <IoIosArrowUp />}\r\n        </li>\r\n        <li onClick={() => onDeliveryCost()}>\r\n          <div>배달비</div>\r\n          {cost ? <IoIosArrowDown /> : <IoIosArrowUp />}\r\n        </li>\r\n        <li>\r\n          <div>최소주문</div>\r\n          <IoIosArrowDown />\r\n        </li>\r\n        <li>\r\n          <div>치타배달</div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sort;\r\n","import React from 'react';\r\nimport './Search.scss';\r\nimport { BsSearch } from 'react-icons/bs';\r\n\r\nconst Search = () => {\r\n  return (\r\n    <div className=\"hp-search\">\r\n      <BsSearch />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport './Address.scss';\r\nimport { FiMapPin } from 'react-icons/fi';\r\nimport { IoIosArrowDown } from 'react-icons/io';\r\n\r\nconst Address = ({ user, defaultAddress }) => {\r\n  return (\r\n    <div className=\"address\">\r\n      <FiMapPin />\r\n      {user ? <p>{defaultAddress}</p> : <p>잠실 8동 </p>}\r\n      <IoIosArrowDown className=\"address-arrow\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Address;\r\n","import React from 'react';\r\nimport './Banner.scss';\r\n\r\nconst Banner = () => {\r\n  return <div className=\"hp-banner\">광고배너</div>;\r\n};\r\n\r\nexport default Banner;\r\n","import React, { useCallback, useState } from 'react';\r\nimport './HomePage.scss';\r\nimport Categories from '../compoentns/Categories';\r\nimport Franchises from '../compoentns/Franchises';\r\nimport Stores from '../compoentns/Stores';\r\nimport Sort from '../modules/Sort';\r\nimport Search from '../compoentns/Search';\r\nimport Address from '../compoentns/Address';\r\nimport Banner from '../compoentns/Banner';\r\nimport { Link } from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst HomePage = ({\r\n  categories,\r\n  orderList,\r\n  user,\r\n  setStores,\r\n  stores,\r\n  defaultAddress,\r\n  recommand,\r\n  cost,\r\n  onDeliveryCost,\r\n  onRecommand,\r\n}) => {\r\n  return (\r\n    <Container className=\"homepage\">\r\n      <Row>\r\n        <Col>\r\n          <div className=\"homepage-header\">\r\n            <div className=\"header-address\">\r\n              <Link to=\"/address\">\r\n                <Address user={user} defaultAddress={defaultAddress} />\r\n              </Link>\r\n              <div className=\"header-search\">\r\n                <Link to=\"/search\">\r\n                  <Search />\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Banner />\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Categories categories={categories} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Franchises />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <p className=\"homepage-sort\">\r\n            <strong>골라먹는 맛집</strong>\r\n          </p>\r\n\r\n          <Sort\r\n            onRecommand={onRecommand}\r\n            onDeliveryCost={onDeliveryCost}\r\n            recommand={recommand}\r\n            cost={cost}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      {/* xs < 768 md < 1024 xl >= 1024 */}\r\n      <Stores stores={stores} />\r\n    </Container>\r\n\r\n    // <div className=\"hompage\">\r\n    //   <div className=\"hp-header\">\r\n    //     <Link to=\"/address\">\r\n    //       <Address user={user} defaultAddress={defaultAddress} />\r\n    //     </Link>\r\n    //     <Link to=\"/search\">\r\n    //       <Search />\r\n    //     </Link>\r\n    //   </div>\r\n    //   <Banner />\r\n    //   <Categories categories={categories} />\r\n    //   {orderList.totalPrice && (\r\n    //     <div>\r\n    //       <div>카트보기</div>\r\n    //       <div>{orderList.totalPrice}</div>\r\n    //     </div>\r\n    //   )}\r\n    //   <Franchises />\r\n    //   <hr />\r\n    //   <Sort\r\n    //     onRecommand={onRecommand}\r\n    //     onDeliveryCost={onDeliveryCost}\r\n    //     recommand={recommand}\r\n    //     cost={cost}\r\n    //   />\r\n    //   <Stores stores={stores} />\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(HomePage);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport './ProfilePage.scss';\r\nimport { CgList } from 'react-icons/cg';\r\nimport { AiOutlineHeart } from 'react-icons/ai';\r\nimport { BiPurchaseTag } from 'react-icons/bi';\r\nimport { FiCreditCard, FiSettings } from 'react-icons/fi';\r\nimport { RiEBike2Line } from 'react-icons/ri';\r\nimport { MdChatBubbleOutline } from 'react-icons/md';\r\nimport { IoCallOutline } from 'react-icons/io5';\r\nimport { HiOutlineSpeakerphone } from 'react-icons/hi';\r\nimport { CgFileDocument } from 'react-icons/cg';\r\n\r\nconst ProfilePage = ({ user }) => {\r\n  const { phoneNum, name } = user || {};\r\n  return (\r\n    <Container className=\"profile\">\r\n      <Row>\r\n        <Col>\r\n          <div className=\"profile-header\">\r\n            <p className=\"header-name\">{name}</p>\r\n            <p>{phoneNum}</p>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <div className=\"profile-coupone\">쿠폰배너</div>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col>\r\n          <div className=\"profile-body\">\r\n            <Link to=\"/address\">\r\n              <CgList />\r\n              <p>배달 주소 관리</p>\r\n            </Link>\r\n            <Link to=\"/favorite\">\r\n              <AiOutlineHeart />\r\n              <p>즐겨찾기</p>\r\n            </Link>\r\n            <Link to=\"#\">\r\n              <BiPurchaseTag />\r\n              <p>할인쿠폰</p>\r\n            </Link>\r\n            <Link to=\"#\">\r\n              <FiCreditCard />\r\n              <p>결제관리</p>\r\n            </Link>\r\n            <Link to=\"#\">\r\n              <RiEBike2Line />\r\n              <p>배달파트너 모집</p>\r\n            </Link>\r\n            <Link to=\"#\">\r\n              <MdChatBubbleOutline />\r\n              <p>자주 묻는 질문</p>\r\n            </Link>\r\n\r\n            <Link to=\"#\">\r\n              <IoCallOutline />\r\n              <p>고객지원</p>\r\n            </Link>\r\n\r\n            <Link to=\"/setting\">\r\n              <FiSettings />\r\n              <p>설정</p>\r\n            </Link>\r\n            <Link to=\"#\">\r\n              <HiOutlineSpeakerphone />\r\n              <p>공지사항</p>\r\n            </Link>\r\n            <Link to=\"#\">\r\n              <CgFileDocument />\r\n              <p>약관·개인정보 처리방침</p>\r\n            </Link>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n    // <div>\r\n    //   <h1>profile</h1>\r\n    //   <div>\r\n    //     <dt>이름</dt>\r\n    //     <dd>{name}</dd>\r\n    //     <dt>번호</dt>\r\n    //     <dd>{phoneNum}</dd>\r\n    //   </div>\r\n\r\n    //   <div>\r\n    //     <Link to=\"/address\">\r\n    //       <p>배달 주소 관리</p>\r\n    //     </Link>\r\n    //     <Link to=\"/favorite\">\r\n    //       <p>즐겨찾기</p>\r\n    //     </Link>\r\n    //     <p>할인쿠폰</p>\r\n    //     <p>결제관리</p>\r\n    //     <p>배달파트너 모집</p>\r\n    //     <p>자주 묻는 질문</p>\r\n    //     <p>고객지원</p>\r\n    //     <Link to=\"/setting\">\r\n    //       <p>설정</p>\r\n    //     </Link>\r\n    //     <p>공지사항</p>\r\n    //     <p>약관·개인정보 처리방침</p>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { BsSearch } from 'react-icons/bs';\r\nimport './SearchPage.scss';\r\nimport Stores from '../compoentns/Stores';\r\nimport { Link } from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst SearchPage = ({ categories, stores }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [sortStores, setSortStores] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (inputValue !== '') {\r\n      const valueLen = inputValue.length;\r\n\r\n      const nextStores = stores.filter(\r\n        (store) => store.name.substring(0, valueLen) === inputValue,\r\n      );\r\n\r\n      setSortStores(nextStores);\r\n    }\r\n  }, [inputValue, stores]);\r\n\r\n  const onChangeInput = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Container className=\"searchPage\">\r\n      <Row>\r\n        <Col>\r\n          <div className=\"sp-header\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"검색어를 입력하세요.\"\r\n              name=\"inputValue\"\r\n              value={inputValue}\r\n              onChange={onChangeInput}\r\n            />\r\n            <BsSearch />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {inputValue === '' ? (\r\n            <div className=\"sp-categories\">\r\n              {categories.map((cat) => (\r\n                <div className=\"category-card\" key={cat.name}>\r\n                  <Link to={`/category/${cat.text}`}>\r\n                    <div className=\"category-img\"></div>\r\n                    <p className=\"category-text\">{cat.text}</p>\r\n                  </Link>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <Stores stores={sortStores} />\r\n            </div>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n\r\n    // <div className=\"searchPage\">\r\n    //   <div className=\"sp-header\">\r\n    //     <input\r\n    //       type=\"text\"\r\n    //       placeholder=\"검색어를 입력하세요.\"\r\n    //       name=\"inputValue\"\r\n    //       value={inputValue}\r\n    //       onChange={onChangeInput}\r\n    //     />\r\n    //     <BsSearch />\r\n    //   </div>\r\n\r\n    //   {inputValue === '' ? (\r\n    //     <div className=\"sp-categories\">\r\n    //       {categories.map((cat) => (\r\n    //         <Link to={`/category/${cat.text}`} key={cat.name}>\r\n    //           <div key={cat.name}>\r\n    //             <div className=\"category-card\">\r\n    //               <div className=\"category-img\"></div>\r\n    //               <p className=\"category-text\">{cat.text}</p>\r\n    //             </div>\r\n    //           </div>\r\n    //         </Link>\r\n    //       ))}\r\n    //     </div>\r\n    //   ) : (\r\n    //     <div>\r\n    //       <Stores stores={sortStores} />\r\n    //     </div>\r\n    //   )}\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","const users = [\r\n  {\r\n    email: 'kkum9408@gmail.com',\r\n    password: '123',\r\n    name: '김동원',\r\n    phoneNum: '010-6366-6585',\r\n    likesList: [],\r\n    orderHistory: [],\r\n    addrList: [\r\n      {\r\n        building: '둔촌신동아아파트',\r\n        address: '서울 강동구 양재대로 96길 79',\r\n        subAddress: '103동 1201호',\r\n        addrCat: '집',\r\n      },\r\n      {\r\n        building: '대승 빌딩',\r\n        address: '서울 강남구 강남대로92길 15',\r\n        subAddress: '9층 L3',\r\n        addrCat: '회사',\r\n      },\r\n      {\r\n        building: '양평 집',\r\n        address: '경기도 양평시 옥천면 96길',\r\n        subAddress: '102번지',\r\n        addrCat: '기타',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    email: 'letuin@gmail.com',\r\n    password: '234',\r\n    name: '렛유인',\r\n    phoneNum: '010-1234-5678',\r\n    likesList: [],\r\n    orderHistory: [],\r\n    addrList: [],\r\n  },\r\n];\r\n\r\nexport const register = (email, password, name, phoneNum) => {\r\n  users.push({\r\n    email: email,\r\n    password: password,\r\n    name: name,\r\n    phoneNum: phoneNum,\r\n  });\r\n};\r\n\r\nexport const singIn = ({ email, password }) => {\r\n  const user = users.find(\r\n    (user) => user.email === email && user.password === password,\r\n  );\r\n\r\n  if (user === undefined) throw new Error();\r\n  return user;\r\n};\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nconst AuthRoute = ({\r\n  authenticated,\r\n  component: Component,\r\n  render,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        authenticated ? (\r\n          // authenticated === true\r\n          render ? (\r\n            // render가 있는 지, 상위 컴포넌트에서 render로 props를 전달했는 지 ?\r\n            render(props)\r\n          ) : (\r\n            // 상위 컴포넌트에서 render로 props를 전달 안했다면 ProfilePage를 렌더링\r\n            <Component {...props} />\r\n          )\r\n        ) : (\r\n          // authenticated === false\r\n          <Redirect\r\n            to={{ pathname: '/login', state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthRoute;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './LoginPage.scss';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst LoginPage = ({ authenticated, login, location, history }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const onChangeEmail = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    try {\r\n      login({ email, password });\r\n      history.go(-1);\r\n    } catch (e) {\r\n      alert('다시 입력해주세요.');\r\n      setEmail('');\r\n      setPassword('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"loginPage\">\r\n      <Row>\r\n        <Col>\r\n          <header className=\"login-title\">\r\n            <h1 className=\"login-logo\">\r\n              <img src=\"/images/coupang-logo.jpg\" alt=\"coupang logo\" />\r\n            </h1>\r\n          </header>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <main className=\"login-main\">\r\n            <div className=\"login-content\">\r\n              <input\r\n                value={email}\r\n                onChange={onChangeEmail}\r\n                type=\"text\"\r\n                placeholder=\"아이디(이메일)\"\r\n              />\r\n              <input\r\n                value={password}\r\n                onChange={onChangePassword}\r\n                type=\"password\"\r\n                placeholder=\"비밀번호\"\r\n              />\r\n              <div className=\"login-message\">\r\n                <div className=\"login-checkbox\">\r\n                  <input type=\"checkbox\" id=\"auto-login\" />\r\n                  <label htmlFor=\"auto-login\">자동로그인</label>\r\n                </div>\r\n                <p className=\"login-search\">아이디(이메일)/비밀번호 찾기</p>\r\n              </div>\r\n              <div className=\"login-submit\">\r\n                <button className=\"login-login\" onClick={handleClick}>\r\n                  로그인\r\n                </button>\r\n                <div className=\"login-line\"></div>\r\n                <div className=\"login-register\">\r\n                  <Link to=\"/register\">\r\n                    <p>회원가입</p>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <footer className=\"login-footer\">\r\n            <p className=\"login-copy\">©Coupang Corp. All rights reserved</p>\r\n          </footer>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n    // <div className=\"loginPage\">\r\n    //   <header className=\"login-title\">\r\n    //     <h1 className=\"login-logo\">\r\n    //       <img src=\"/images/coupang-logo.jpg\" alt=\"coupang logo\" />\r\n    //     </h1>\r\n    //   </header>\r\n    //   <main className=\"login-main\">\r\n    //     <div className=\"login-content\">\r\n    //       <input\r\n    //         value={email}\r\n    //         onChange={onChangeEmail}\r\n    //         type=\"text\"\r\n    //         placeholder=\"아이디(이메일)\"\r\n    //       />\r\n    //       <input\r\n    //         value={password}\r\n    //         onChange={onChangePassword}\r\n    //         type=\"password\"\r\n    //         placeholder=\"비밀번호\"\r\n    //       />\r\n    //       <div className=\"login-message\">\r\n    //         <div className=\"login-checkbox\">\r\n    //           <input type=\"checkbox\" id=\"auto-login\" />\r\n    //           <label htmlFor=\"auto-login\">자동로그인</label>\r\n    //         </div>\r\n    //         <p className=\"login-search\">아이디(이메일)/비밀번호 찾기</p>\r\n    //       </div>\r\n    //       <div className=\"login-submit\">\r\n    //         <button className=\"login-login\" onClick={handleClick}>\r\n    //           로그인\r\n    //         </button>\r\n    //         <div className=\"login-line\"></div>\r\n    //         <div className=\"login-register\">\r\n    //           <Link to=\"/register\">\r\n    //             <p>회원가입</p>\r\n    //           </Link>\r\n    //         </div>\r\n    //       </div>\r\n    //     </div>\r\n    //   </main>\r\n    //   <footer className=\"login-footer\">\r\n    //     <p className=\"login-copy\">©Coupang Corp. All rights reserved</p>\r\n    //   </footer>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { useState } from 'react';\r\nimport './RegisterPage.scss';\r\n\r\nconst RegisterPage = ({ register, history }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [passwordCheck, setPasswordCheck] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [phoneNum, setPhoneNum] = useState('');\r\n\r\n  const onChangeEmail = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const onChangePasswordCheck = (e) => {\r\n    setPasswordCheck(e.target.value);\r\n  };\r\n\r\n  const onChangeName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const onChangePhoneNum = (e) => {\r\n    setPhoneNum(e.target.value);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (password === passwordCheck) {\r\n      // 생성 로직\r\n      register(email, password, name, phoneNum);\r\n      history.push('/login');\r\n    } else {\r\n      alert('비밀번호가 다릅니다.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"registerPage\">\r\n      <header className=\"reg-title\">\r\n        <h1 className=\"reg-logo\">\r\n          <img src=\"/images/coupang-logo.jpg\" alt=\"coupang logo\" />\r\n        </h1>\r\n      </header>\r\n      <main className=\"reg-main\">\r\n        <div className=\"reg-content\">\r\n          <p>회원정보를 입력해주세요</p>\r\n          <form className=\"reg-form\">\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"아이디(이메일)\"\r\n              value={email}\r\n              onChange={onChangeEmail}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"비밀번호\"\r\n              value={password}\r\n              onChange={onChangePassword}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"비밀번호 확인\"\r\n              value={passwordCheck}\r\n              onChange={onChangePasswordCheck}\r\n            />\r\n            <input\r\n              type=\"test\"\r\n              placeholder=\"이름\"\r\n              value={name}\r\n              onChange={onChangeName}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"휴대폰 번호\"\r\n              value={phoneNum}\r\n              onChange={onChangePhoneNum}\r\n            />\r\n          </form>\r\n          <div className=\"reg-line\" />\r\n          <div>\r\n            <p>쿠팡 서비스약관에 동의해주세요.</p>\r\n            <div className=\"reg-agree-all\">\r\n              <input type=\"checkbox\" id=\"all\" />\r\n              <label htmlFor=\"all\">모두 동의합니다.</label>\r\n            </div>\r\n            <div className=\"reg-agree-form\">\r\n              <ul>\r\n                <li>\r\n                  <input type=\"checkbox\" id=\"age\" />\r\n                  <label htmlFor=\"age\">[필수] 만 14세 이상입니다</label>\r\n                </li>\r\n                <li>\r\n                  <input type=\"checkbox\" id=\"use\" />\r\n                  <label htmlFor=\"use\">[필수] 쿠팡 이용약관 동의.</label>\r\n                </li>\r\n                <li>\r\n                  <input type=\"checkbox\" id=\"elect\" />\r\n                  <label htmlFor=\"elect\">\r\n                    [필수] 전자금융거래 이용약관 동의.\r\n                  </label>\r\n                </li>\r\n                <li>\r\n                  <input type=\"checkbox\" id=\"collect\" />\r\n                  <label htmlFor=\"collect\">\r\n                    [필수] 개인정보 수집 및 이용 동의.\r\n                  </label>\r\n                </li>\r\n                <li>\r\n                  <input type=\"checkbox\" id=\"offer\" />\r\n                  <label htmlFor=\"offer\">[필수] 개인정보 제공 동의.</label>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <button className=\"reg-submit\" onClick={handleClick}>\r\n              동의하고 가입하기\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </main>\r\n      <footer className=\"reg-footer\">\r\n        <p className=\"reg-copy\">©Coupang Corp. All rights reserved</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './DetailPage.scss';\r\nimport LikeList from '../compoentns/LikeList';\r\nimport { AiOutlineHeart, AiFillStar } from 'react-icons/ai';\r\nimport { BsClock } from 'react-icons/bs';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nconst DetailPage = ({ match, setDetail, orderList, user, stores }) => {\r\n  const { store } = match.params;\r\n  const [detailItem, setDetailItem] = useState([]);\r\n  const [payment, setPayment] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const detail = stores.find((value) => value.name === store);\r\n    if (detail !== undefined) {\r\n      setDetailItem(detail);\r\n      setDetail(detail);\r\n    }\r\n  }, [store, setDetail, stores]);\r\n\r\n  useEffect(() => {\r\n    const sum = orderList.reduce((acc, cur) => {\r\n      return acc + cur.totalPrice;\r\n    }, 0);\r\n\r\n    setPayment(sum);\r\n  }, [orderList]);\r\n\r\n  if (detailItem.length === 0) {\r\n    return <div>로딩중</div>;\r\n  }\r\n\r\n  return (\r\n    <Container className=\"detail\">\r\n      <Row>\r\n        <div className=\"detail-img\">\r\n          <Col>\r\n            <div className=\"detail-info\">\r\n              <p className=\"info-name\">{detailItem.name}</p>\r\n              <div className=\"info-detail\">\r\n                <AiFillStar />\r\n                <p className=\"info-grade\">{detailItem.grade}</p>\r\n                <Link to={`/detail/${store}/review`}>\r\n                  <p>\r\n                    리뷰 <strong>{detailItem.feedNum}</strong>개 &gt;\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </div>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"detail-delivery-info\">\r\n            <div className=\"delivery-info-header\">\r\n              <div>\r\n                <BsClock />\r\n                <div> 21~31분</div>\r\n              </div>\r\n              <div className=\"delivery-store-info\">매장 / 원산지 정보</div>\r\n            </div>\r\n\r\n            <div className=\"delivery-price-info\">\r\n              <p className=\"delivery-text\">배달비</p>\r\n              <p>\r\n                <strong>{detailItem.deliveryCost}원</strong>\r\n              </p>\r\n            </div>\r\n            <div className=\"delivery-price-info\">\r\n              <p className=\"delivery-text\">최소주문</p>\r\n              <p>5000원</p>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <div className=\"menu-nav\">\r\n          <div>추천메뉴</div>\r\n          <div>메뉴소개</div>\r\n          <div>튀김류</div>\r\n          <div>토핑류</div>\r\n        </div>\r\n      </Row>\r\n      <Row>\r\n        <div className=\"line\"></div>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"detail-subMenu\">\r\n            {detailItem.menu.length > 0 &&\r\n              detailItem.menu.map((food) => (\r\n                <Link to={`/detail/${store}/${food.name}`} key={food.id}>\r\n                  <div className=\"subMenu\">\r\n                    <div className=\"subMenu-info\">\r\n                      <p className=\"food-name\">{food.name}</p>\r\n                      <p className=\"food-price\">{food.price}원</p>\r\n                      <p className=\"food-detail\">{food.detail}</p>\r\n                    </div>\r\n                    <div className=\"subMenu-img\">이미지</div>\r\n                  </div>\r\n                  <hr />\r\n                </Link>\r\n              ))}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <div className=\"detail-cart\">\r\n          {orderList.length > 0 && (\r\n            <Link to={`/detail/${store}/cart`}>\r\n              <button className=\"detail-addBtn\">\r\n                <p className=\"order-length\">{orderList.length} </p>\r\n                <p>카트보기</p>\r\n                <p className=\"order-price\">{payment}원</p>\r\n              </button>\r\n            </Link>\r\n          )}\r\n        </div>\r\n      </Row>\r\n    </Container>\r\n    // <div className=\"detail\">\r\n    //   <h2>디테일 페이지</h2>\r\n    //   <div className=\"detail-img\">\r\n    //     <div>이미지</div>\r\n    //   </div>\r\n    //   {user ? (\r\n    //     <LikeList user={user} store={store} detailItem={detailItem} />\r\n    //   ) : (\r\n    //     <Link to=\"/login\">\r\n    //       <AiOutlineHeart />\r\n    //     </Link>\r\n    //   )}\r\n\r\n    //   <div className=\"detail-cart\">\r\n    //     {orderList.length > 0 && (\r\n    //       <Link to={`/detail/${store}/cart`}>\r\n    //         <button>\r\n    //           <p>{orderList.length}</p>\r\n    //           <p>카트보기</p>\r\n    //           <p>{payment}</p>\r\n    //         </button>\r\n    //       </Link>\r\n    //     )}\r\n    //   </div>\r\n    //   <div className=\"detail-info\">\r\n    //     <div>가게 이름 : {detailItem.name}</div>\r\n    //     <AiFillStar />\r\n    //     <div>별점 : {detailItem.grade}</div>\r\n    //     <div>리뷰 개수 : {detailItem.feedNum}</div>\r\n    //   </div>\r\n    //   <div className=\"detail-delivery-info\">\r\n    //     <div>\r\n    //       <BsClock />\r\n    //       <div> 21~31분</div>\r\n    //       <div>매장 / 원산지 정보</div>\r\n    //     </div>\r\n    //     <div>배달비 : {detailItem.deliveryCost}</div>\r\n    //     <div>최소주문 : 5000원</div>\r\n    //   </div>\r\n\r\n    //   <div className=\"detail-review\">\r\n    //     {/* 후기 이동 */}\r\n    //     <Link to={`/detail/${store}/review`}>\r\n    //       <hr />\r\n    //       리뷰\r\n    //       <hr />\r\n    //     </Link>\r\n    //   </div>\r\n    //   <div className=\"detail-subMenu\">\r\n    //     <div>\r\n    //       메뉴 :\r\n    //       {detailItem.menu.length > 0 &&\r\n    //         detailItem.menu.map((food) => (\r\n    //           <Link to={`/detail/${store}/${food.name}`} key={food.id}>\r\n    //             <div>\r\n    //               <div>음식 이름 : {food.name}</div>\r\n    //               <div>음식 가격 : {food.price}</div>\r\n    //               <div>음식 설명 : {food.detail}</div>\r\n    //               <hr />\r\n    //             </div>\r\n    //           </Link>\r\n    //         ))}\r\n    //     </div>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default DetailPage;\r\n\r\n// {\r\n//    {user ? (\r\n//           <LikeList user={user} store={store} detailItem={detailItem} />\r\n//         ) : (\r\n//           <Link to=\"/login\">\r\n//             <AiOutlineHeart />\r\n//           </Link>\r\n//         )}\r\n// }\r\n","import React, { useEffect, useState } from 'react';\r\nimport Categories from '../compoentns/Categories';\r\nimport './CategoryPage.scss';\r\nimport Stores from '../compoentns/Stores';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Sort from '../modules/Sort';\r\n\r\nconst CategoryPage = ({\r\n  match,\r\n  categories,\r\n  stores,\r\n  recommand,\r\n  cost,\r\n  onDeliveryCost,\r\n  onRecommand,\r\n}) => {\r\n  const { category } = match.params;\r\n  const [catStores, setCatStores] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const sortCat = stores.filter((store) => store.category === category);\r\n    setCatStores(sortCat);\r\n  }, [category, stores]);\r\n\r\n  return (\r\n    <Container className=\"categoryPage\">\r\n      <Row>\r\n        <Col>\r\n          <Categories categories={categories} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Sort\r\n            onRecommand={onRecommand}\r\n            onDeliveryCost={onDeliveryCost}\r\n            recommand={recommand}\r\n            cost={cost}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Stores stores={catStores} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n    // <div className=\"categoryPage\">\r\n    //   <h1>카테고리 페이지</h1>\r\n    //   <Categories categories={categories} />\r\n    //   <Stores stores={catStores} />\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default CategoryPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AddressPage = ({ user, setDefaultAddress }) => {\r\n  const [hasHomeAddress, setHasHomeAddress] = useState('');\r\n  const [hasWorkAddress, setHasWorkAddress] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (user.addrList.length > 0) {\r\n      const nextHasHomeAddress = user.addrList.find(\r\n        (addr) => addr.addrCat === '집',\r\n      );\r\n      const nextHasWorkAddress = user.addrList.find(\r\n        (addr) => addr.addrCat === '회사',\r\n      );\r\n      setHasHomeAddress(nextHasHomeAddress);\r\n      setHasWorkAddress(nextHasWorkAddress);\r\n    }\r\n  }, [user.addrList]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>주소 페이지</h1>\r\n      <Link to=\"/setAddress\">\r\n        <div>새 배달 주소 추가</div>\r\n      </Link>\r\n      {hasHomeAddress ? (\r\n        <div onClick={() => setDefaultAddress(hasHomeAddress.address)}>\r\n          {hasHomeAddress.address}\r\n        </div>\r\n      ) : (\r\n        <Link to=\"/setAddress\">\r\n          <div>집 추가</div>\r\n        </Link>\r\n      )}\r\n      {hasWorkAddress ? (\r\n        <div onClick={() => setDefaultAddress(hasWorkAddress.address)}>\r\n          {hasWorkAddress.address}\r\n        </div>\r\n      ) : (\r\n        <Link to=\"/setAddress\">\r\n          <div>회사 추가</div>\r\n        </Link>\r\n      )}\r\n      {user.addrList.length > 0 &&\r\n        user.addrList.map((addr) =>\r\n          addr.addrCat === '기타' ? (\r\n            <div\r\n              key={addr.address}\r\n              onClick={() => setDefaultAddress(addr.address)}\r\n            >\r\n              {addr.address}\r\n            </div>\r\n          ) : null,\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddressPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport './ReviewPage.scss';\r\nimport { FiThumbsUp, FiThumbsDown } from 'react-icons/fi';\r\nimport { AiOutlineStar, AiFillStar } from 'react-icons/ai';\r\nimport { IoIosArrowDown } from 'react-icons/io';\r\n\r\nconst ReviewPage = ({ match, stores }) => {\r\n  const { store } = match.params;\r\n  const [details, setDetails] = useState([]);\r\n  const [recommandToggle, setRecommandToggle] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const nextDetails = stores.find((value) => value.name === store);\r\n    setDetails(nextDetails);\r\n  }, [stores, store]);\r\n\r\n  const upBtn = (id) => {\r\n    const nextRecommandToggle = !recommandToggle;\r\n    if (nextRecommandToggle === true) {\r\n      details.review[id].recommand += 1;\r\n    } else {\r\n      details.review[id].recommand -= 1;\r\n    }\r\n\r\n    setRecommandToggle(nextRecommandToggle);\r\n  };\r\n\r\n  const downBtn = () => {};\r\n\r\n  if (details.length === 0) {\r\n    return <div>로딩중</div>;\r\n  }\r\n\r\n  return (\r\n    <Container className=\"review\">\r\n      <Row>\r\n        <Col className=\"review-header\">\r\n          <p>{store} 리뷰</p>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className=\"review-sort\">\r\n          <div>\r\n            <input type=\"checkbox\" />\r\n            <label htmlFor=\"photo-check\">포토리뷰</label>\r\n          </div>\r\n          <div className=\"sort-latest\">\r\n            최신순\r\n            <IoIosArrowDown />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col className=\"review-main\">\r\n          {details.review.length > 0 &&\r\n            details.review.map((review) => (\r\n              <div key={review.id} className=\"review-list\">\r\n                <p className=\"review-name\">{review.user[0]}**</p>\r\n                <div className=\"review-info\">\r\n                  <p>\r\n                    <AiFillStar />\r\n                    <AiFillStar />\r\n                    <AiFillStar />\r\n                    <AiFillStar />\r\n                    <AiFillStar />\r\n                  </p>\r\n                  <p className=\"review-data\">{review.date}</p>\r\n                </div>\r\n                <div className=\"review-img\"></div>\r\n                <p className=\"review-text\">{review.text}</p>\r\n                <p className=\"review-order\">\r\n                  주문 음식{' '}\r\n                  <strong className=\"order-menu\">{review.orderdMenu}</strong>\r\n                </p>\r\n                {review.recommand > 0 && (\r\n                  <p className=\"review-recommand\">\r\n                    <strong>{review.recommand}</strong>명에게 도움이 되었습니다.\r\n                  </p>\r\n                )}\r\n                <div className=\"review-btn\">\r\n                  <button onClick={() => upBtn(review.id)}>\r\n                    <p>\r\n                      <FiThumbsUp />\r\n                      도움이 돼요\r\n                    </p>\r\n                  </button>\r\n                  <button onClick={() => upBtn(review.id)}>\r\n                    <p>\r\n                      <FiThumbsDown />\r\n                      도움 안돼요\r\n                    </p>\r\n                  </button>\r\n                </div>\r\n                <hr />\r\n              </div>\r\n            ))}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n\r\n    // <div>\r\n    //   <p>{store} 리뷰</p>\r\n    //   <div>\r\n    //     <div>\r\n    //       <input type=\"checkbox\" />\r\n    //       <label htmlFor=\"photo-check\">포토리뷰</label>\r\n    //     </div>\r\n    //     <div>최신순</div>\r\n    //   </div>\r\n    //   <div>\r\n    //     {details.review.length > 0 &&\r\n    //       details.review.map((review) => (\r\n    //         <div key={review.id}>\r\n    //           <p>이름 : {review.user}</p>\r\n    //           <p>날짜 : {review.date}</p>\r\n    //           <p>별점 : {review.grade}</p>\r\n    //           <div>텍스트 : {review.text}</div>\r\n    //           <div>주문 음식 : {review.orderdMenu}</div>\r\n    //           <p>추천수 : {review.recommand}</p>\r\n    //         </div>\r\n    //       ))}\r\n    //   </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default ReviewPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './OrderListPage.scss';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst OrderListPage = ({ match, detail, orderList, setOrderList, history }) => {\r\n  const { food } = match.params;\r\n  const [count, setCount] = useState(1);\r\n  const [totalPrice, setTotalPrice] = useState(undefined);\r\n  const [overlap, setOverlap] = useState(false);\r\n  const foodMenu = detail?.menu.find((m) => m.name === food);\r\n  const defaultPrice = foodMenu.price;\r\n  // detail?.menu : detail == false면 뒤에 실행 안함\r\n\r\n  useEffect(() => {\r\n    setTotalPrice(foodMenu.price);\r\n  }, [foodMenu]);\r\n\r\n  if (foodMenu === undefined || totalPrice === undefined) {\r\n    return <>로딩중</>;\r\n  }\r\n\r\n  const onMinusBtn = () => {\r\n    if (count > 1) {\r\n      setCount(count - 1);\r\n    }\r\n    const nextTotalPrice = defaultPrice * (count - 1);\r\n    setTotalPrice(nextTotalPrice);\r\n  };\r\n\r\n  const onPlusBtn = () => {\r\n    if (count < 20) setCount(count + 1);\r\n    const nextTotalPrice = defaultPrice * (count + 1);\r\n    setTotalPrice(nextTotalPrice);\r\n  };\r\n\r\n  const onToggleReqBtn = (e) => {\r\n    if (e.target.checked) {\r\n      foodMenu.reqMenu[e.target.id].check = true;\r\n    }\r\n  };\r\n\r\n  const onToggleSelBtn = (e) => {\r\n    const addCost = foodMenu.selectMenu[e.target.id].addCost;\r\n\r\n    if (e.target.checked) {\r\n      setTotalPrice(totalPrice + addCost);\r\n      foodMenu.selectMenu[e.target.id].check = true;\r\n    } else {\r\n      setTotalPrice(totalPrice - addCost);\r\n      foodMenu.selectMenu[e.target.id].check = false;\r\n    }\r\n  };\r\n\r\n  const onCancle = () => {\r\n    setOverlap(false);\r\n  };\r\n\r\n  const onChangeOrderList = () => {\r\n    orderList.splice(0, orderList.length);\r\n\r\n    const reqMenu = foodMenu.reqMenu\r\n      .filter((v) => v.check === true)\r\n      .map((el) => el.text);\r\n\r\n    const selMenu = foodMenu.selectMenu\r\n      .filter((v) => v.check === true)\r\n      .map((el) => el.text);\r\n\r\n    const nextOrderList = {\r\n      mainMenu: food,\r\n      count: count,\r\n      totalPrice: totalPrice,\r\n      reqMenu: reqMenu,\r\n      selMenu: selMenu,\r\n      store: detail.name,\r\n    };\r\n\r\n    setOrderList([...orderList, nextOrderList]);\r\n\r\n    history.go(-1);\r\n  };\r\n\r\n  const onSubmitBtn = () => {\r\n    if (orderList.length > 0) {\r\n      if (orderList[0].store !== detail.name) {\r\n        setOverlap(true);\r\n      }\r\n    } else {\r\n      const reqMenu = foodMenu.reqMenu\r\n        .filter((v) => v.check === true)\r\n        .map((el) => el.text);\r\n\r\n      const selMenu = foodMenu.selectMenu\r\n        .filter((v) => v.check === true)\r\n        .map((el) => el.text);\r\n\r\n      const nextOrderList = {\r\n        mainMenu: food,\r\n        count: count,\r\n        totalPrice: totalPrice,\r\n        reqMenu: reqMenu,\r\n        selMenu: selMenu,\r\n        store: detail.name,\r\n      };\r\n\r\n      setOrderList([...orderList, nextOrderList]);\r\n\r\n      history.go(-1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"orderList\">\r\n      <Row>\r\n        <div className=\"orderList-img\">이미지</div>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col>\r\n          <div className=\"orderList-header\">\r\n            <div className=\"food-name\">{food}</div>\r\n            <div className=\"food-detail\">{foodMenu.detail}</div>\r\n            <hr />\r\n            <div className=\"food-price\">\r\n              <div className=\"price-text\">가격 </div>\r\n              <div>{totalPrice}원</div>\r\n            </div>\r\n            <div className=\"food-count\">\r\n              <div className=\"count-text\">수량</div>\r\n              <div className=\"count-btn\">\r\n                <button onClick={onMinusBtn}>-</button>\r\n                <div>{count}</div>\r\n                <button onClick={onPlusBtn}>+</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <div className=\"add-text\">\r\n          <p>맛 선택</p>\r\n        </div>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"orderList-add\">\r\n            {foodMenu.reqMenu.map((add) => (\r\n              <div className=\"add-list\" key={add.id}>\r\n                <div className=\"list\">\r\n                  <input\r\n                    onChange={onToggleReqBtn}\r\n                    type=\"radio\"\r\n                    id={add.id}\r\n                    name=\"reqMenu\"\r\n                  />\r\n                  <label htmlFor={add.text}>{add.text}</label>\r\n                </div>\r\n                <div>+{add.addCost}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <div className=\"add-text\">\r\n          <p>추가 구성 선택</p>\r\n        </div>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"orderList-add\">\r\n            {foodMenu.selectMenu.map((add) => (\r\n              <div className=\"add-list\" key={add.id}>\r\n                <div className=\"list\">\r\n                  <input\r\n                    onChange={onToggleSelBtn}\r\n                    type=\"checkbox\"\r\n                    id={add.id}\r\n                    name=\"selectMenu\"\r\n                  />\r\n                  <label htmlFor={add.text}>{add.text}</label>\r\n                </div>\r\n                <div>+{add.addCost}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <div className=\"orderList-cart\" onClick={onSubmitBtn}>\r\n          <button>카트에 담기</button>\r\n        </div>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {overlap && (\r\n            <div>\r\n              <p>같은 가게의 메뉴만을 담을 수 있습니다.</p>\r\n              <p>주문할 가게를 변경하실 경우 이전에 담은 메뉴가 삭제됩니다.</p>\r\n              <button onClick={onCancle}>취소</button>\r\n              <button onClick={onChangeOrderList}>새로담기</button>\r\n            </div>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n    //   <div className=\"orderList\">\r\n    //     <div className=\"orderList-header\">\r\n    //       <div className=\"food-img\">이미지</div>\r\n    //       <div className=\"food-name\">{food}</div>\r\n    //       <div className=\"food-price\">\r\n    //         <div>가격 </div>\r\n    //         <div>{totalPrice}원</div>\r\n    //       </div>\r\n    //       <div className=\"food-count\">\r\n    //         <div className=\"count-text\">수량</div>\r\n    //         <div className=\"count-btn\">\r\n    //           <button onClick={onMinusBtn}>-</button>\r\n    //           <div>{count}</div>\r\n    //           <button onClick={onPlusBtn}>+</button>\r\n    //         </div>\r\n    //       </div>\r\n    //     </div>\r\n\r\n    //     <div className=\"orderList-add\">\r\n    //       <div className=\"add-order1\">\r\n    //         <div className=\"add-text\">맛 선택</div>\r\n    //         {foodMenu.reqMenu.map((add) => (\r\n    //           <div className=\"add-card\" key={add.id}>\r\n    //             <div>\r\n    //               <input\r\n    //                 onChange={onToggleReqBtn}\r\n    //                 type=\"radio\"\r\n    //                 id={add.id}\r\n    //                 name=\"reqMenu\"\r\n    //               />\r\n    //               <label htmlFor={add.text}>{add.text}</label>\r\n    //             </div>\r\n    //             <div>+{add.addCost}</div>\r\n    //           </div>\r\n    //         ))}\r\n    //       </div>\r\n\r\n    //       <div className=\"add-order2\">\r\n    //         <div className=\"add-text\">추가 구성 선택</div>\r\n    //         {foodMenu.selectMenu.map((add) => (\r\n    //           <div className=\"add-card\" key={add.id}>\r\n    //             <div>\r\n    //               <input\r\n    //                 onChange={onToggleSelBtn}\r\n    //                 type=\"checkbox\"\r\n    //                 id={add.id}\r\n    //                 name=\"selectMenu\"\r\n    //               />\r\n    //               <label htmlFor={add.text}>{add.text}</label>\r\n    //             </div>\r\n    //             <div>+{add.addCost}</div>\r\n    //           </div>\r\n    //         ))}\r\n    //       </div>\r\n    //     </div>\r\n\r\n    //     <div className=\"orderList-cart\" onClick={onSubmitBtn}>\r\n    //       <button>카트에 담기</button>\r\n    //     </div>\r\n\r\n    //     {overlap && (\r\n    //       <div>\r\n    //         <p>같은 가게의 메뉴만을 담을 수 있습니다.</p>\r\n    //         <p>주문할 가게를 변경하실 경우 이전에 담은 메뉴가 삭제됩니다.</p>\r\n    //         <button onClick={onCancle}>취소</button>\r\n    //         <button onClick={onChangeOrderList}>새로담기</button>\r\n    //       </div>\r\n    //     )}\r\n    //   </div>\r\n  );\r\n};\r\n\r\nexport default OrderListPage;\r\n","import React, { useState } from 'react';\r\nimport './CartPage.scss';\r\nimport { GrFormClose } from 'react-icons/gr';\r\nimport { BiCaretRight } from 'react-icons/bi';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst CartPage = ({\r\n  orderList,\r\n  detail,\r\n  setOrderList,\r\n  history,\r\n  user,\r\n  defaultAddress,\r\n}) => {\r\n  const [lists, setLists] = useState(orderList);\r\n\r\n  const onCloseBtn = (idx) => {\r\n    if (lists.length > 1) {\r\n      const newLists = lists.filter((_, index) => index !== idx);\r\n      setLists(newLists);\r\n      setOrderList(lists);\r\n    } else {\r\n      alert('최소 한가지 선택');\r\n    }\r\n  };\r\n\r\n  const onAddMenu = () => {\r\n    setOrderList(lists);\r\n    history.go(-1);\r\n  };\r\n\r\n  const payment = lists.reduce((acc, cur) => {\r\n    return acc + cur.totalPrice;\r\n  }, 0);\r\n\r\n  const onPayBtn = () => {\r\n    // 이 로직은 주문-> 배달 완료일 때 가능한 로직\r\n    // 임시로 결제하기 눌렀을 때 배달이 완료됐다고 가정\r\n\r\n    const orderInfo = {\r\n      orderMenu: lists,\r\n      orderDate: getFormatDate(),\r\n      delivCheck: true,\r\n    };\r\n\r\n    user.orderHistory.push(orderInfo);\r\n    console.log(lists);\r\n    setOrderList([]);\r\n    history.push('/');\r\n  };\r\n\r\n  if (orderList.length === 0) return <div></div>;\r\n  return (\r\n    <Container className=\"cart\">\r\n      <Row>\r\n        <Col>\r\n          <div className=\"cart-header\">\r\n            <h4>카트</h4>\r\n            <p className=\"header-building\">{defaultAddress} (으)로 배달</p>\r\n            <p className=\"header-address\">주소</p>\r\n          </div>\r\n          <hr />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"cart-main\">\r\n            <p className=\"main-name\">{detail.name}</p>\r\n            <hr />\r\n            {lists.map((list, idx) => (\r\n              <div key={idx}>\r\n                <div className=\"main-cancel\">\r\n                  <p>{list.mainMenu}</p>\r\n                  <GrFormClose onClick={() => onCloseBtn(idx)} />\r\n                </div>\r\n                <p>{list.reqMunu}</p>\r\n                <p>{list.selMenu}</p>\r\n                <p>{list.totalPrice}원</p>\r\n              </div>\r\n            ))}\r\n            <hr />\r\n            <div className=\"main-addMenu\">\r\n              <p onClick={onAddMenu}>+메뉴추가</p>\r\n            </div>\r\n            <hr />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"cart-coupon\">\r\n            <p className=\"coupon-title\">할인쿠폰</p>\r\n            <div className=\"coupon-card\">\r\n              <p className=\"card-title\">\r\n                사용가능 쿠폰{' '}\r\n                <span>\r\n                  0장 <BiCaretRight />\r\n                </span>\r\n              </p>\r\n              <div className=\"coupon-inner\">\r\n                <div>\r\n                  <p>쿠폰을 선택해 주세요</p>\r\n                </div>\r\n                <button>선택</button>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"cart-list\">\r\n            <div>\r\n              <p>주문금액</p>\r\n              <p>{payment}원</p>\r\n            </div>\r\n            <div>\r\n              <p>배달비</p>\r\n              <p>{detail.deliveryCost}원</p>\r\n            </div>\r\n            <hr />\r\n            <div className=\"list-amount\">\r\n              <p>총 결제금액</p>\r\n              <p>{detail.deliveryCost + payment}원</p>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col>\r\n          <div className=\"cart-request\">\r\n            <p className=\"request-header\">요청사항</p>\r\n            <div>\r\n              <p>가게 사장님에게</p>\r\n              <textarea placeholder=\"예) 견과류는 빼주세요\"></textarea>\r\n              <input type=\"checkbox\" />\r\n              <label htmlFor=\"request\">일회용 수저, 포크는 빼주세요</label>\r\n            </div>\r\n            <div>\r\n              <p>배달 기사님에게</p>\r\n              <textarea placeholder=\"초인종 누르고 문 앞\"></textarea>\r\n            </div>\r\n            <hr />\r\n\r\n            <div>\r\n              <p className=\"pay-select\">결제수단</p>\r\n              <p>KB국민카드 ********</p>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <div className=\"cart-payment\">\r\n          <button onClick={onPayBtn}>\r\n            <p>{detail.deliveryCost + payment}원 결제하기</p>\r\n          </button>\r\n        </div>\r\n      </Row>\r\n    </Container>\r\n    // <div className=\"cart\">\r\n    //   <div className=\"cart-header\">\r\n    //     <h1>카트</h1>\r\n    //     <p className=\"header-building\">대승빌딩 (으)로 배달</p>\r\n    //     <p className=\"header-address\">주소</p>\r\n    //   </div>\r\n    //   <hr />\r\n\r\n    //   <div className=\"cart-main\">\r\n    //     <div>\r\n    //       {lists.map((list, idx) => (\r\n    //         <div key={idx}>\r\n    //           <p>{list.mainMenu}</p>\r\n    //           <p>{list.reqMunu}</p>\r\n    //           <p>{list.selMenu}</p>\r\n    //           <p>{list.totalPrice}</p>\r\n    //           <GrFormClose onClick={() => onCloseBtn(idx)} />\r\n    //         </div>\r\n    //       ))}\r\n    //     </div>\r\n    //     <hr />\r\n    //     <div className=\"main-addMenu\">\r\n    //       <p onClick={onAddMenu}>+메뉴추가</p>\r\n    //     </div>\r\n    //   </div>\r\n    //   <hr />\r\n    //   <div className=\"cart-coupon\">\r\n    //     <p className=\"coupon-title\">할인쿠폰</p>\r\n    //     <div className=\"coupon-card\">\r\n    //       <p className=\"card-title\">사용가능 쿠폰 0장</p>\r\n    //       <div className=\"coupon-inner\">\r\n    //         <div>\r\n    //           <p>쿠폰을 선택해 주세요</p>\r\n    //         </div>\r\n    //         <button>선택</button>\r\n    //       </div>\r\n    //     </div>\r\n    //   </div>\r\n    //   <hr />\r\n    //   <div className=\"cart-list\">\r\n    //     <div>\r\n    //       <p>주문금액</p>\r\n    //       <p>{payment}원</p>\r\n    //     </div>\r\n    //     <div>\r\n    //       <p>배달비</p>\r\n    //       <p>{detail.deliveryCost}원</p>\r\n    //     </div>\r\n    //     <div>\r\n    //       <p className=\"list-amount\">총 결제금액</p>\r\n    //       <p>{detail.deliveryCost + payment}원</p>\r\n    //     </div>\r\n    //   </div>\r\n    //   <hr />\r\n\r\n    //   <div className=\"cart-request\">\r\n    //     <p className=\"request-header\">요청사항</p>\r\n    //     <div>\r\n    //       <p>가게 사장님에게</p>\r\n    //       <textarea placeholder=\"예) 견과류는 빼주세요\"></textarea>\r\n    //       <input type=\"checkbox\" />\r\n    //       <label htmlFor=\"request\">일회용 수저, 포크는 빼주세요</label>\r\n    //     </div>\r\n    //     <div>\r\n    //       <p>배달 기사님에게</p>\r\n    //       <textarea placeholder=\"초인종 누르고 문 앞\"></textarea>\r\n    //     </div>\r\n    //     <hr />\r\n\r\n    //     <div>\r\n    //       <p>결제수단</p>\r\n    //       <p>KB국민카드 ********</p>\r\n    //     </div>\r\n    //   </div>\r\n    //   <div className=\"cart-payment\">\r\n    //     <button onClick={onPayBtn}>\r\n    //       {detail.deliveryCost + payment}원 결제하기\r\n    //     </button>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default CartPage;\r\n\r\nfunction getFormatDate() {\r\n  const date = new Date();\r\n  let year = date.getFullYear(); //yyyy\r\n  let month = 1 + date.getMonth(); //M\r\n  month = month >= 10 ? month : '0' + month; //month 두자리로 저장\r\n  let day = date.getDate(); //d\r\n  day = day >= 10 ? day : '0' + day; //day 두자리로 저장\r\n\r\n  let hours = date.getHours();\r\n  hours = hours >= 10 ? hours : '0' + hours; //day 두자리로 저장\r\n\r\n  let min = date.getMinutes();\r\n  min = min >= 10 ? min : '0' + min; //day 두자리로 저장\r\n\r\n  return `${year}-${month}-${day} ${hours}:${min}`; //'-' 추가하여 yyyy-mm-dd 형태 생성 가능\r\n}\r\n","import React from 'react';\r\n\r\nconst Recept = ({ modal, order, detail }) => {\r\n  console.log(modal);\r\n  console.log(order);\r\n\r\n  const sumPrice = order.orderMenu.reduce((acc, cur) => {\r\n    return acc + cur.totalPrice;\r\n  }, 0);\r\n\r\n  return (\r\n    <div>\r\n      {modal && (\r\n        <div>\r\n          <h1>영수증</h1>\r\n          <hr />\r\n          <div className=\"recept-card\">\r\n            <h1>{order.orderMenu[0].store}</h1>\r\n            <p>{order.orderDate}</p>\r\n            {order.orderMenu.map((list, index) => (\r\n              <div key={index}>\r\n                <div>{list.mainMenu}</div>\r\n                <div>{list.reqMenu}</div>\r\n                <div>{list.selMenu}</div>\r\n                <div>{list.totalPrice}</div>\r\n              </div>\r\n            ))}\r\n            <hr />\r\n            <div>\r\n              <p>주문금액 :{sumPrice}</p>\r\n              <p>배달비 : {detail.deliveryCost}</p>\r\n              <p>소액 주문비 : 0</p>\r\n              <p>할인금액 : 0</p>\r\n            </div>\r\n            <hr />\r\n            <h1>총 결제금액 : {sumPrice + detail.deliveryCost}</h1>\r\n          </div>\r\n          <p>KB국민카드 ****0000** 결제</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recept;\r\n","import React, { useState } from 'react';\r\nimport Recept from '../compoentns/Recept';\r\n\r\nconst OrderHistoryPage = ({ user, detail }) => {\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const onModalBtn = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const onReviewBtn = () => {};\r\n\r\n  if (user.orderHistory.length === 0) {\r\n    return <div>주문 기록 없음</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {user.orderHistory.map((order, index) => (\r\n        <div key={index}>\r\n          <p>{order.orderMenu[0].store}</p>\r\n          <p>{order.orderDate}</p>\r\n          {order.delivCheck ? <p>배달 완료</p> : <p>배달 취소</p>}\r\n          {order.orderMenu.map((list, index) => (\r\n            <div key={index}>\r\n              <div>{list.count}</div>\r\n              <div>{list.mainMenu}</div>\r\n              <div>{list.reqMenu}</div>\r\n              <div>{list.selMenu}</div>\r\n            </div>\r\n          ))}\r\n          <p>\r\n            {order.orderMenu.reduce((acc, cur) => {\r\n              return acc + cur.totalPrice;\r\n            }, 0)}\r\n          </p>\r\n\r\n          <p onClick={onReviewBtn}>후기 쓰기</p>\r\n          <p>재주문하기</p>\r\n          <button onClick={onModalBtn}>영수증보기</button>\r\n          <Recept modal={modal} order={order} detail={detail} />\r\n          <hr />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderHistoryPage;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst LogoutButton = ({ logout, history }) => {\r\n  const handleClick = () => {\r\n    logout();\r\n    history.push('/');\r\n  };\r\n\r\n  return <button onClick={handleClick}>로그아웃</button>;\r\n};\r\n\r\nexport default withRouter(LogoutButton);\r\n","import React from 'react';\r\nimport LogoutButton from '../compoentns/LogoutButton';\r\n\r\nconst SettingPage = ({ authenticated, logout }) => {\r\n  return (\r\n    <div>\r\n      <h1>설정 페이지</h1>\r\n      <div>배달 현황 알림</div>\r\n      <div>쿠폰&amp;혜택 정보 알림</div>\r\n      <LogoutButton logout={logout} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingPage;\r\n","import React from 'react';\r\nimport DaumPostcode from 'react-daum-postcode';\r\n\r\nconst Postcode = ({ onAddressChange, onClose }) => {\r\n  const handleComplete = (data) => {\r\n    let fullAddress = data.address;\r\n    let extraAddress = '';\r\n\r\n    if (data.addressType === 'R') {\r\n      if (data.bname !== '') {\r\n        extraAddress += data.bname;\r\n      }\r\n      if (data.buildingName !== '') {\r\n        extraAddress +=\r\n          extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName;\r\n      }\r\n      fullAddress += extraAddress !== '' ? ` (${extraAddress})` : '';\r\n    }\r\n\r\n    onAddressChange(fullAddress);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <DaumPostcode onComplete={handleComplete} />;\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Postcode;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Postcode from '../compoentns/Postcode';\r\n\r\nconst SetAddressPage = ({ user, setDefaultAddress }) => {\r\n  const [addr, setAddr] = useState('');\r\n  const [text, setText] = useState('');\r\n  const [addressCat, setAddressCat] = useState('');\r\n  const [apiToggle, setApiToggle] = useState(true);\r\n\r\n  const onInputText = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const onAddrCat = (e) => {\r\n    setAddressCat(e.target.innerText);\r\n  };\r\n\r\n  const onAddAddress = () => {\r\n    const nextAddr = addr.split(', ');\r\n\r\n    const idx = nextAddr[0].indexOf('(');\r\n\r\n    const address = nextAddr[0].slice(0, idx);\r\n    const subAddress = text;\r\n    const building =\r\n      nextAddr[1] !== undefined\r\n        ? nextAddr[1].slice(0, nextAddr[1].length - 1)\r\n        : null;\r\n    const addrCat = addressCat === '' ? '기타' : addressCat;\r\n    user.addrList.push({\r\n      address,\r\n      subAddress,\r\n      building,\r\n      addrCat,\r\n    });\r\n\r\n    setDefaultAddress(address);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>배달지 상세 정보</h1>\r\n      {apiToggle ? (\r\n        <Postcode\r\n          onAddressChange={setAddr}\r\n          onClose={() => setApiToggle(false)}\r\n        />\r\n      ) : (\r\n        <div>\r\n          <div>{addr}</div>\r\n          <div>메인 주소</div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"상세주소(아파트/동/호)\"\r\n            value={text}\r\n            onChange={onInputText}\r\n          />\r\n          <div>상세 주소</div>\r\n          <ul onClick={onAddrCat}>\r\n            <li>집</li>\r\n            <li>회사</li>\r\n            <li>기타</li>\r\n          </ul>\r\n          <div>지도에서 확인하기</div>\r\n\r\n          <Link to=\"/\">\r\n            <button onClick={onAddAddress}>완료</button>\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SetAddressPage;\r\n","import React from 'react';\r\nimport './Navigation.scss';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Link } from 'react-router-dom';\r\nimport { BiHomeAlt, BiSearch, BiHeart, BiCalendarCheck } from 'react-icons/bi';\r\nimport { BsPerson } from 'react-icons/bs';\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"nav-main\">\r\n        <Col className=\"nav-item\">\r\n          <Link to=\"/\">\r\n            <div className=\"nav-item-body\">\r\n              <BiHomeAlt />\r\n              <p>홈</p>\r\n            </div>\r\n          </Link>\r\n        </Col>\r\n        <Col className=\"nav-item\">\r\n          <Link to=\"/search\">\r\n            <div className=\"nav-item-body\">\r\n              <BiSearch />\r\n              <p>검색</p>\r\n            </div>\r\n          </Link>\r\n        </Col>\r\n        <Col className=\"nav-item\">\r\n          <Link to=\"/order\">\r\n            <div className=\"nav-item-body\">\r\n              <BiHeart />\r\n              <p>즐겨찾기</p>\r\n            </div>\r\n          </Link>\r\n        </Col>\r\n        <Col className=\"nav-item\">\r\n          <Link to=\"/favorite\">\r\n            <div className=\"nav-item-body\">\r\n              <BiCalendarCheck />\r\n              <p>주문내역</p>\r\n            </div>\r\n          </Link>\r\n        </Col>\r\n        <Col className=\"nav-item\">\r\n          <Link to=\"/profile\">\r\n            <div className=\"nav-item-body\">\r\n              <BsPerson />\r\n              <p>My</p>\r\n            </div>\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","export const category = [\r\n  {\r\n    name: 'kor',\r\n    text: '한식',\r\n  },\r\n  {\r\n    name: 'jap',\r\n    text: '일식',\r\n  },\r\n  {\r\n    name: 'chn',\r\n    text: '중식',\r\n  },\r\n  {\r\n    name: 'west',\r\n    text: '양식',\r\n  },\r\n  {\r\n    name: 'alone',\r\n    text: '1인분',\r\n  },\r\n  {\r\n    name: 'chicken',\r\n    text: '치킨',\r\n  },\r\n  {\r\n    name: 'snack',\r\n    text: '분식',\r\n  },\r\n  {\r\n    name: 'pork',\r\n    text: '돈가스',\r\n  },\r\n  {\r\n    name: 'pork-feet',\r\n    text: '족발',\r\n  },\r\n  {\r\n    name: 'cafe',\r\n    text: '카페',\r\n  },\r\n  {\r\n    name: 'steam',\r\n    text: '찜',\r\n  },\r\n  {\r\n    name: 'fast-food',\r\n    text: '패스트푸드',\r\n  },\r\n];\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport FavoritePage from './pages/FavoritePage';\r\nimport HomePage from './pages/HomePage';\r\nimport ProfilePage from './pages/ProfilePage';\r\nimport SearchPage from './pages/SearchPage';\r\nimport { singIn, register } from './modules/auth';\r\nimport AuthRoute from './compoentns/AuthRoute';\r\nimport LoginPage from './pages/LoginPage';\r\nimport RegisterPage from './pages/RegisterPage';\r\nimport DetailPage from './pages/DetailPage';\r\nimport CategoryPage from './pages/CategoryPage';\r\nimport AddressPage from './pages/AddressPage';\r\nimport axios from 'axios';\r\nimport ReviewPage from './pages/ReviewPage';\r\nimport OrderListPage from './pages/OrderListPage';\r\nimport CartPage from './pages/CartPage';\r\nimport OrderHistoryPage from './pages/OrderHistoryPage';\r\nimport SettingPage from './pages/SettingPage';\r\nimport SetAddressPage from './pages/SetAddressPage';\r\nimport Navigation from './compoentns/Navigation';\r\nimport './App.scss';\r\nimport { store } from './data/stores';\r\nimport { category } from './data/categories';\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [categories, setCategories] = useState(category);\r\n  // const [categories, setCategories] = useState([]);\r\n  const [detail, setDetail] = useState(undefined);\r\n  const [orderList, setOrderList] = useState([]);\r\n  const [stores, setStores] = useState(store);\r\n  // const [stores, setStores] = useState([]);\r\n  const [defaultAddress, setDefaultAddress] = useState('설정');\r\n  const [recommand, setRecommand] = useState(false);\r\n  const [cost, setCost] = useState(false);\r\n\r\n  const authenticated = user !== null; // user가 존재하지 않으면 false, 존재하면 true\r\n\r\n  const login = ({ email, password }) => setUser(singIn({ email, password }));\r\n  const logout = () => setUser(null);\r\n\r\n  // useEffect(() => {\r\n  //   const fetchData = async () => {\r\n  //     try {\r\n  //       const response = await axios.get('http://localhost:4000/stores');\r\n\r\n  //       setStores(response.data);\r\n  //     } catch (e) {\r\n  //       console.log(e);\r\n  //     }\r\n  //   };\r\n  //   fetchData();\r\n  // }, []);\r\n\r\n  // useEffect(() => {\r\n  //   const fetchData = async () => {\r\n  //     try {\r\n  //       const response = await axios.get('http://localhost:4000/categories');\r\n  //       setCategories(response.data);\r\n  //     } catch (e) {\r\n  //       console.log(e);\r\n  //     }\r\n  //   };\r\n  //   fetchData();\r\n  // }, []);\r\n\r\n  const onRecommand = useCallback(() => {\r\n    recommand\r\n      ? setStores([...stores.sort((a, b) => b.grade - a.grade)])\r\n      : setStores([...stores.sort((a, b) => a.grade - b.grade)]);\r\n\r\n    setRecommand((recommand) => !recommand);\r\n  }, [stores, recommand, setStores]);\r\n\r\n  const onDeliveryCost = useCallback(() => {\r\n    cost\r\n      ? setStores([...stores.sort((a, b) => b.deliveryCost - a.deliveryCost)])\r\n      : setStores([...stores.sort((a, b) => a.deliveryCost - b.deliveryCost)]);\r\n\r\n    setCost((cost) => !cost);\r\n  }, [stores, cost, setStores]);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Navigation />\r\n      <Switch>\r\n        <Route\r\n          path=\"/\"\r\n          exact={true}\r\n          render={(props) => (\r\n            <HomePage\r\n              categories={categories}\r\n              orderList={orderList}\r\n              user={user}\r\n              stores={stores}\r\n              setStores={setStores}\r\n              defaultAddress={defaultAddress}\r\n              onRecommand={onRecommand}\r\n              onDeliveryCost={onDeliveryCost}\r\n              recommand={recommand}\r\n              cost={cost}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n\r\n        <Route\r\n          path=\"/detail/:store\"\r\n          exact={true}\r\n          render={(props) => (\r\n            <DetailPage\r\n              AuthRoute={AuthRoute}\r\n              authenticated={authenticated}\r\n              setDetail={setDetail}\r\n              orderList={orderList}\r\n              user={user}\r\n              stores={stores}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n\r\n        <Route\r\n          path=\"/detail/:store/cart\"\r\n          exact={true}\r\n          render={(props) => (\r\n            <CartPage\r\n              orderList={orderList}\r\n              detail={detail}\r\n              setOrderList={setOrderList}\r\n              setUser={setUser}\r\n              user={user}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n\r\n        <Route\r\n          path=\"/detail/:store/review\"\r\n          exact={true}\r\n          render={(props) => <ReviewPage stores={stores} {...props} />}\r\n        />\r\n\r\n        <Route\r\n          path=\"/detail/:store/:food\"\r\n          exact={true}\r\n          render={(props) => (\r\n            <OrderListPage\r\n              detail={detail}\r\n              orderList={orderList}\r\n              setOrderList={setOrderList}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n\r\n        <Route\r\n          path=\"/search\"\r\n          render={(props) => (\r\n            <SearchPage categories={categories} stores={stores} {...props} />\r\n          )}\r\n        />\r\n\r\n        <AuthRoute\r\n          authenticated={authenticated}\r\n          path=\"/order\"\r\n          render={(props) => (\r\n            <OrderHistoryPage user={user} detail={detail} {...props} />\r\n          )}\r\n        />\r\n\r\n        <AuthRoute\r\n          authenticated={authenticated}\r\n          path=\"/favorite\"\r\n          render={(props) => <FavoritePage user={user} {...props} />}\r\n        />\r\n\r\n        <Route\r\n          path=\"/category/:category\"\r\n          render={(props) => (\r\n            <CategoryPage\r\n              categories={categories}\r\n              stores={stores}\r\n              onRecommand={onRecommand}\r\n              onDeliveryCost={onDeliveryCost}\r\n              recommand={recommand}\r\n              cost={cost}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n        <AuthRoute\r\n          authenticated={authenticated}\r\n          path=\"/address\"\r\n          render={(props) => (\r\n            <AddressPage user={user} setDefaultAddress={setDefaultAddress} />\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/setAddress\"\r\n          render={(props) => (\r\n            <SetAddressPage\r\n              user={user}\r\n              setDefaultAddress={setDefaultAddress}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/setting\"\r\n          render={(props) => <SettingPage logout={logout} {...props} />}\r\n        />\r\n\r\n        <Route\r\n          path=\"/register\"\r\n          render={(props) => <RegisterPage register={register} {...props} />}\r\n        />\r\n        <AuthRoute\r\n          authenticated={authenticated}\r\n          path=\"/profile\"\r\n          render={(props) => <ProfilePage user={user} {...props} />}\r\n        />\r\n        <Route\r\n          path=\"/login\"\r\n          render={(props) => (\r\n            <LoginPage authenticated={authenticated} login={login} {...props} />\r\n          )}\r\n        />\r\n        <Route render={({ location }) => <div>존재하지 않는 페이지</div>} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n// const [stores, setStores] = useState(createBulkStores);\r\n\r\n// function createBulkStores() {\r\n//   const array = [];\r\n//   for (let i = 1; i <= 2500; i++) {\r\n//     array.push({\r\n//       id: i,\r\n//       name: `${i}번째 가게`,\r\n//       franchise: true,\r\n//       category: `${i} 임시 가게`,\r\n//       grade: i,\r\n//       feedNum: i,\r\n//       deliveryCost: i + 500,\r\n//       menu: {\r\n//         id: i,\r\n//         name: `${i} 임시 메뉴`,\r\n//         price: 3000,\r\n//         detail: `${i} 임시 세부 메뉴`,\r\n//         reqMenu: {\r\n//           id: i,\r\n//           text: `${i} 임시 맛`,\r\n//           addCost: 0,\r\n//           check: false,\r\n//         },\r\n//         selMenu: {\r\n//           id: i,\r\n//           text: `${i} 스콘`,\r\n//           addCost: 1000,\r\n//           check: false,\r\n//         },\r\n//       },\r\n//       review: {\r\n//         id: i,\r\n//         user: '최 땡땡',\r\n//         date: '2021-02-01',\r\n//         grade: 4.4,\r\n//         photoCheck: true,\r\n//         text: `${i} 후기`,\r\n//         orderMenu: `${i} 아인슈페너`,\r\n//       },\r\n//     });\r\n//   }\r\n\r\n//   return array;\r\n// }\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename=\"/delivery-service-web\">\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}