{"version":3,"sources":["compoentns/Stores.js","pages/FavoritePage.js","compoentns/Categories.js","compoentns/Franchises.js","modules/Sort.js","compoentns/Search.js","compoentns/Address.js","compoentns/Banner.js","pages/HomePage.js","pages/ProfilePage.js","pages/SearchPage.js","modules/auth.js","compoentns/AuthRoute.js","pages/LoginPage.js","pages/RegisterPage.js","pages/DetailPage.js","pages/CategoryPage.js","pages/AddressPage.js","pages/ReviewPage.js","pages/OrderListPage.js","pages/CartPage.js","compoentns/Recept.js","pages/OrderHistoryPage.js","compoentns/LogoutButton.js","pages/SettingPage.js","compoentns/Postcode.js","pages/SetAddressPage.js","compoentns/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["Stores","stores","Row","className","Col","map","store","to","name","grade","feedNum","deliveryCost","FavoritePage","user","console","log","likesList","length","Categories","categories","category","text","Franchises","useState","setStores","useEffect","a","axios","get","response","data","fetchData","franchise","Sort","onRecommand","recommand","onDeliveryCost","cost","onClick","Search","Address","defaultAddress","Banner","HomePage","orderList","Container","React","memo","ProfilePage","phoneNum","SearchPage","inputValue","setInputValue","sortStores","setSortStores","valueLen","nextStores","filter","substring","type","placeholder","value","onChange","e","target","cat","users","email","password","orderHistory","addrList","building","address","subAddress","addrCat","register","push","AuthRoute","authenticated","Component","component","render","rest","props","pathname","state","from","location","LoginPage","login","history","setEmail","setPassword","src","alt","id","htmlFor","go","alert","RegisterPage","passwordCheck","setPasswordCheck","setName","setPhoneNum","DetailPage","match","setDetail","params","detailItem","setDetailItem","payment","setPayment","detail","find","undefined","sum","reduce","acc","cur","totalPrice","menu","food","price","CategoryPage","catStores","setCatStores","sortCat","AddressPage","setDefaultAddress","hasHomeAddress","setHasHomeAddress","hasWorkAddress","setHasWorkAddress","nextHasHomeAddress","addr","nextHasWorkAddress","ReviewPage","details","setDetails","nextDetails","review","orderdMenu","OrderListPage","setOrderList","count","setCount","setTotalPrice","overlap","setOverlap","foodMenu","m","defaultPrice","onToggleReqBtn","checked","reqMenu","check","onToggleSelBtn","addCost","selectMenu","add","v","el","selMenu","nextOrderList","mainMenu","splice","CartPage","lists","setLists","list","idx","newLists","_","index","onCloseBtn","reqMunu","orderInfo","orderMenu","orderDate","getFormatDate","delivCheck","date","Date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","min","getMinutes","Recept","modal","order","sumPrice","OrderHistoryPage","setModal","onModalBtn","onReviewBtn","withRouter","logout","SettingPage","Postcode","onAddressChange","onClose","onComplete","fullAddress","extraAddress","addressType","bname","buildingName","SetAddressPage","setAddr","setText","addressCat","setAddressCat","apiToggle","setApiToggle","innerText","nextAddr","split","indexOf","slice","Navigation","App","setUser","setCategories","setRecommand","setCost","Error","singIn","useCallback","sort","b","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.72aecf1c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Stores.scss';\r\nimport { AiFillStar } from 'react-icons/ai';\r\nimport { Link } from 'react-router-dom';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst Stores = ({ stores }) => {\r\n  return (\r\n    <Row className=\"hp-items\">\r\n      <Col>\r\n        {stores.map((store) => (\r\n          <div className=\"item-card\" key={store.name}>\r\n            <Link to={`/detail/${store.name}`}>\r\n              <div className=\"card-img\">\r\n                <div>이미지</div>\r\n              </div>\r\n              <div className=\"card-text\">\r\n                <div className=\"card-name\">{store.name}</div>\r\n                <div className=\"card-detail\">\r\n                  <AiFillStar />\r\n                  <p>\r\n                    {store.grade} {store.feedNum} / ({store.deliveryCost}원)\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          </div>\r\n        ))}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Stores;\r\n// {\r\n//    <div style={{ height: '150vh', textAlign: 'center' }}>\r\n// }\r\n","import React from 'react';\r\nimport Stores from '../compoentns/Stores';\r\nimport { AiFillHeart } from 'react-icons/ai';\r\n\r\nconst FavoritePage = ({ user }) => {\r\n  console.log(user.likesList);\r\n\r\n  if (user.likesList.length === 0) {\r\n    return (\r\n      <div>\r\n        <p>즐겨찾는 맛집이 없습니다.</p>\r\n        <p>\r\n          좋아하는 맛집에 <AiFillHeart />를 눌러주세요.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>즐겨찾기</h1>\r\n      <p>총 {user.likesList.length}개</p>\r\n      <Stores stores={user.likesList} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoritePage;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Categories.scss';\r\n\r\nconst Categories = ({ categories }) => {\r\n  return (\r\n    <div className=\"hp-categorys\">\r\n      {categories.map((category) => (\r\n        <Link to={`/category/${category.text}`} key={category.name}>\r\n          <div className=\"hp-category\">\r\n            <div></div>\r\n            <p>{category.text}</p>\r\n          </div>\r\n          <hr />\r\n        </Link>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Categories;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { AiFillStar } from 'react-icons/ai';\r\nimport { BsArrowRight } from 'react-icons/bs';\r\nimport './Franchises.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Franchises = () => {\r\n  const [stores, setStores] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:4000/stores');\r\n\r\n        setStores(response.data);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"hp-recommand\">\r\n      <div className=\"hp-recommand-header\">\r\n        <p>인기 프랜차이즈</p>\r\n        <BsArrowRight className=\"arrow-right\" />\r\n      </div>\r\n      <div className=\"hp-recommand-lists\">\r\n        {stores.map(\r\n          (store) =>\r\n            store.franchise && (\r\n              <Link to={`/detail/${store.name}`} key={store.name}>\r\n                <div className=\"hp-recommand-list\">\r\n                  <div className=\"list-img\">이미지</div>\r\n                  <p className=\"list-name\">{store.name}</p>\r\n                  <div className=\"list-detail\">\r\n                    <AiFillStar />\r\n                    <p>\r\n                      {store.grade} ({store.feedNum})\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </Link>\r\n            ),\r\n        )}\r\n      </div>\r\n      <hr />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Franchises;\r\n","import React from 'react';\r\nimport './Sort.scss';\r\nimport { IoIosArrowDown, IoIosArrowUp } from 'react-icons/io';\r\n\r\nconst Sort = ({ onRecommand, recommand, onDeliveryCost, cost }) => {\r\n  return (\r\n    <div className=\"hp-sort\">\r\n      <ul>\r\n        <li onClick={() => onRecommand()}>\r\n          <div>추천순</div>\r\n          {recommand ? <IoIosArrowDown /> : <IoIosArrowUp />}\r\n        </li>\r\n        <li onClick={() => onDeliveryCost()}>\r\n          <div>배달비</div>\r\n          {cost ? <IoIosArrowDown /> : <IoIosArrowUp />}\r\n        </li>\r\n        <li>\r\n          <div>최소주문</div>\r\n          <IoIosArrowDown />\r\n        </li>\r\n        <li>\r\n          <div>치타배달</div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sort;\r\n","import React from 'react';\r\nimport './Search.scss';\r\nimport { BsSearch } from 'react-icons/bs';\r\n\r\nconst Search = () => {\r\n  return (\r\n    <div className=\"hp-search\">\r\n      <BsSearch />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport './Address.scss';\r\n\r\nconst Address = ({ user, defaultAddress }) => {\r\n  return (\r\n    <div className=\"address\">\r\n      {user ? <p>{defaultAddress}</p> : <p>잠실 8동 </p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Address;\r\n","import React from 'react';\r\nimport './Banner.scss';\r\n\r\nconst Banner = () => {\r\n  return <div className=\"hp-banner\">광고배너</div>;\r\n};\r\n\r\nexport default Banner;\r\n","import React, { useCallback, useState } from 'react';\r\nimport './HomePage.scss';\r\nimport Categories from '../compoentns/Categories';\r\nimport Franchises from '../compoentns/Franchises';\r\nimport Stores from '../compoentns/Stores';\r\nimport Sort from '../modules/Sort';\r\nimport Search from '../compoentns/Search';\r\nimport Address from '../compoentns/Address';\r\nimport Banner from '../compoentns/Banner';\r\nimport { Link } from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst HomePage = ({\r\n  categories,\r\n  orderList,\r\n  user,\r\n  setStores,\r\n  stores,\r\n  defaultAddress,\r\n  recommand,\r\n  cost,\r\n  onDeliveryCost,\r\n  onRecommand,\r\n}) => {\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <p>Testing branch</p>\r\n          <Link to=\"/address\">\r\n            <Address user={user} defaultAddress={defaultAddress} />\r\n          </Link>\r\n          <Link to=\"/search\">\r\n            <Search />\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Banner />\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Categories categories={categories} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Franchises />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <p>\r\n            <strong>골라먹는 맛집</strong>\r\n          </p>\r\n\r\n          <Sort\r\n            onRecommand={onRecommand}\r\n            onDeliveryCost={onDeliveryCost}\r\n            recommand={recommand}\r\n            cost={cost}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      {/* xs < 768 md < 1024 xl >= 1024 */}\r\n      <Stores stores={stores} />\r\n    </Container>\r\n\r\n    // <div className=\"hompage\">\r\n    //   <div className=\"hp-header\">\r\n    //     <Link to=\"/address\">\r\n    //       <Address user={user} defaultAddress={defaultAddress} />\r\n    //     </Link>\r\n    //     <Link to=\"/search\">\r\n    //       <Search />\r\n    //     </Link>\r\n    //   </div>\r\n    //   <Banner />\r\n    //   <Categories categories={categories} />\r\n    //   {orderList.totalPrice && (\r\n    //     <div>\r\n    //       <div>카트보기</div>\r\n    //       <div>{orderList.totalPrice}</div>\r\n    //     </div>\r\n    //   )}\r\n    //   <Franchises />\r\n    //   <hr />\r\n    //   <Sort\r\n    //     onRecommand={onRecommand}\r\n    //     onDeliveryCost={onDeliveryCost}\r\n    //     recommand={recommand}\r\n    //     cost={cost}\r\n    //   />\r\n    //   <Stores stores={stores} />\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(HomePage);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport './ProfilePage.scss';\r\nimport { CgList } from 'react-icons/cg';\r\nimport { AiOutlineHeart } from 'react-icons/ai';\r\nimport { BiPurchaseTag } from 'react-icons/bi';\r\nimport { FiCreditCard, FiSettings } from 'react-icons/fi';\r\nimport { RiEBike2Line } from 'react-icons/ri';\r\nimport { MdChatBubbleOutline } from 'react-icons/md';\r\nimport { IoCallOutline } from 'react-icons/io5';\r\nimport { HiOutlineSpeakerphone } from 'react-icons/hi';\r\nimport { CgFileDocument } from 'react-icons/cg';\r\n\r\nconst ProfilePage = ({ user }) => {\r\n  const { phoneNum, name } = user || {};\r\n  return (\r\n    <Container className=\"profile\">\r\n      <Row>\r\n        <Col>\r\n          <div className=\"profile-header\">\r\n            <p className=\"header-name\">{name}</p>\r\n            <p>{phoneNum}</p>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <div className=\"profile-coupone\">쿠폰배너</div>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col>\r\n          <div className=\"profile-body\">\r\n            <Link to=\"/address\">\r\n              <CgList />\r\n              <p>배달 주소 관리</p>\r\n            </Link>\r\n            <Link to=\"/favorite\">\r\n              <AiOutlineHeart />\r\n              <p>즐겨찾기</p>\r\n            </Link>\r\n            <Link to=\"#\">\r\n              <BiPurchaseTag />\r\n              <p>할인쿠폰</p>\r\n            </Link>\r\n            <Link to=\"#\">\r\n              <FiCreditCard />\r\n              <p>결제관리</p>\r\n            </Link>\r\n            <Link to=\"#\">\r\n              <RiEBike2Line />\r\n              <p>배달파트너 모집</p>\r\n            </Link>\r\n            <Link to=\"#\">\r\n              <MdChatBubbleOutline />\r\n              <p>자주 묻는 질문</p>\r\n            </Link>\r\n\r\n            <Link to=\"#\">\r\n              <IoCallOutline />\r\n              <p>고객지원</p>\r\n            </Link>\r\n\r\n            <Link to=\"/setting\">\r\n              <FiSettings />\r\n              <p>설정</p>\r\n            </Link>\r\n            <Link to=\"#\">\r\n              <HiOutlineSpeakerphone />\r\n              <p>공지사항</p>\r\n            </Link>\r\n            <Link to=\"#\">\r\n              <CgFileDocument />\r\n              <p>약관·개인정보 처리방침</p>\r\n            </Link>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n    // <div>\r\n    //   <h1>profile</h1>\r\n    //   <div>\r\n    //     <dt>이름</dt>\r\n    //     <dd>{name}</dd>\r\n    //     <dt>번호</dt>\r\n    //     <dd>{phoneNum}</dd>\r\n    //   </div>\r\n\r\n    //   <div>\r\n    //     <Link to=\"/address\">\r\n    //       <p>배달 주소 관리</p>\r\n    //     </Link>\r\n    //     <Link to=\"/favorite\">\r\n    //       <p>즐겨찾기</p>\r\n    //     </Link>\r\n    //     <p>할인쿠폰</p>\r\n    //     <p>결제관리</p>\r\n    //     <p>배달파트너 모집</p>\r\n    //     <p>자주 묻는 질문</p>\r\n    //     <p>고객지원</p>\r\n    //     <Link to=\"/setting\">\r\n    //       <p>설정</p>\r\n    //     </Link>\r\n    //     <p>공지사항</p>\r\n    //     <p>약관·개인정보 처리방침</p>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { BsSearch } from 'react-icons/bs';\r\nimport './SearchPage.scss';\r\nimport Stores from '../compoentns/Stores';\r\nimport { Link } from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst SearchPage = ({ categories, stores }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [sortStores, setSortStores] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (inputValue !== '') {\r\n      const valueLen = inputValue.length;\r\n\r\n      const nextStores = stores.filter(\r\n        (store) => store.name.substring(0, valueLen) === inputValue,\r\n      );\r\n\r\n      setSortStores(nextStores);\r\n    }\r\n  }, [inputValue, stores]);\r\n\r\n  const onChangeInput = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Container className=\"searchPage\">\r\n      <Row>\r\n        <Col>\r\n          <div className=\"sp-header\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"검색어를 입력하세요.\"\r\n              name=\"inputValue\"\r\n              value={inputValue}\r\n              onChange={onChangeInput}\r\n            />\r\n            <BsSearch />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {inputValue === '' ? (\r\n            <div className=\"sp-categories\">\r\n              {categories.map((cat) => (\r\n                <div className=\"category-card\" key={cat.name}>\r\n                  <Link to={`/category/${cat.text}`}>\r\n                    <div className=\"category-img\"></div>\r\n                    <p className=\"category-text\">{cat.text}</p>\r\n                  </Link>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <Stores stores={sortStores} />\r\n            </div>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n\r\n    // <div className=\"searchPage\">\r\n    //   <div className=\"sp-header\">\r\n    //     <input\r\n    //       type=\"text\"\r\n    //       placeholder=\"검색어를 입력하세요.\"\r\n    //       name=\"inputValue\"\r\n    //       value={inputValue}\r\n    //       onChange={onChangeInput}\r\n    //     />\r\n    //     <BsSearch />\r\n    //   </div>\r\n\r\n    //   {inputValue === '' ? (\r\n    //     <div className=\"sp-categories\">\r\n    //       {categories.map((cat) => (\r\n    //         <Link to={`/category/${cat.text}`} key={cat.name}>\r\n    //           <div key={cat.name}>\r\n    //             <div className=\"category-card\">\r\n    //               <div className=\"category-img\"></div>\r\n    //               <p className=\"category-text\">{cat.text}</p>\r\n    //             </div>\r\n    //           </div>\r\n    //         </Link>\r\n    //       ))}\r\n    //     </div>\r\n    //   ) : (\r\n    //     <div>\r\n    //       <Stores stores={sortStores} />\r\n    //     </div>\r\n    //   )}\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","const users = [\r\n  {\r\n    email: 'kkum9408@gmail.com',\r\n    password: '123',\r\n    name: '김동원',\r\n    phoneNum: '010-6366-6585',\r\n    likesList: [],\r\n    orderHistory: [],\r\n    addrList: [\r\n      {\r\n        building: '둔촌신동아아파트',\r\n        address: '서울 강동구 양재대로 96길 79',\r\n        subAddress: '103동 1201호',\r\n        addrCat: '집',\r\n      },\r\n      {\r\n        building: '대승 빌딩',\r\n        address: '서울 강남구 강남대로92길 15',\r\n        subAddress: '9층 L3',\r\n        addrCat: '회사',\r\n      },\r\n      {\r\n        building: '양평 집',\r\n        address: '경기도 양평시 옥천면 96길',\r\n        subAddress: '102번지',\r\n        addrCat: '기타',\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    email: 'letuin@gmail.com',\r\n    password: '234',\r\n    name: '렛유인',\r\n    phoneNum: '010-1234-5678',\r\n    likesList: [],\r\n    orderHistory: [],\r\n    addrList: [],\r\n  },\r\n];\r\n\r\nexport const register = (email, password, name, phoneNum) => {\r\n  users.push({\r\n    email: email,\r\n    password: password,\r\n    name: name,\r\n    phoneNum: phoneNum,\r\n  });\r\n};\r\n\r\nexport const singIn = ({ email, password }) => {\r\n  const user = users.find(\r\n    (user) => user.email === email && user.password === password,\r\n  );\r\n\r\n  if (user === undefined) throw new Error();\r\n  return user;\r\n};\r\n","import React from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nconst AuthRoute = ({\r\n  authenticated,\r\n  component: Component,\r\n  render,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        authenticated ? (\r\n          // authenticated === true\r\n          render ? (\r\n            // render가 있는 지, 상위 컴포넌트에서 render로 props를 전달했는 지 ?\r\n            render(props)\r\n          ) : (\r\n            // 상위 컴포넌트에서 render로 props를 전달 안했다면 ProfilePage를 렌더링\r\n            <Component {...props} />\r\n          )\r\n        ) : (\r\n          // authenticated === false\r\n          <Redirect\r\n            to={{ pathname: '/login', state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default AuthRoute;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './LoginPage.scss';\r\n\r\nconst LoginPage = ({ authenticated, login, location, history }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const onChangeEmail = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    try {\r\n      login({ email, password });\r\n      history.go(-1);\r\n    } catch (e) {\r\n      alert('다시 입력해주세요.');\r\n      setEmail('');\r\n      setPassword('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"loginPage\">\r\n      <header className=\"login-title\">\r\n        <h1 className=\"login-logo\">\r\n          <img src=\"/images/coupang-logo.jpg\" alt=\"coupang logo\" />\r\n        </h1>\r\n      </header>\r\n      <main className=\"login-main\">\r\n        <div className=\"login-content\">\r\n          <input\r\n            value={email}\r\n            onChange={onChangeEmail}\r\n            type=\"text\"\r\n            placeholder=\"아이디(이메일)\"\r\n          />\r\n          <input\r\n            value={password}\r\n            onChange={onChangePassword}\r\n            type=\"password\"\r\n            placeholder=\"비밀번호\"\r\n          />\r\n          <div className=\"login-message\">\r\n            <div className=\"login-checkbox\">\r\n              <input type=\"checkbox\" id=\"auto-login\" />\r\n              <label htmlFor=\"auto-login\">자동로그인</label>\r\n            </div>\r\n            <p className=\"login-search\">아이디(이메일)/비밀번호 찾기</p>\r\n          </div>\r\n          <div className=\"login-submit\">\r\n            <button className=\"login-login\" onClick={handleClick}>\r\n              로그인\r\n            </button>\r\n            <div className=\"login-line\"></div>\r\n            <div className=\"login-register\">\r\n              <Link to=\"/register\">\r\n                <p>회원가입</p>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n      <footer className=\"login-footer\">\r\n        <p className=\"login-copy\">©Coupang Corp. All rights reserved</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { useState } from 'react';\r\nimport './RegisterPage.scss';\r\n\r\nconst RegisterPage = ({ register, history }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [passwordCheck, setPasswordCheck] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [phoneNum, setPhoneNum] = useState('');\r\n\r\n  const onChangeEmail = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const onChangePassword = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const onChangePasswordCheck = (e) => {\r\n    setPasswordCheck(e.target.value);\r\n  };\r\n\r\n  const onChangeName = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const onChangePhoneNum = (e) => {\r\n    setPhoneNum(e.target.value);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    if (password === passwordCheck) {\r\n      // 생성 로직\r\n      register(email, password, name, phoneNum);\r\n      history.push('/login');\r\n    } else {\r\n      alert('비밀번호가 다릅니다.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"registerPage\">\r\n      <header className=\"reg-title\">\r\n        <h1 className=\"reg-logo\">\r\n          <img src=\"/images/coupang-logo.jpg\" alt=\"coupang logo\" />\r\n        </h1>\r\n      </header>\r\n      <main className=\"reg-main\">\r\n        <div className=\"reg-content\">\r\n          <p>회원정보를 입력해주세요</p>\r\n          <form className=\"reg-form\">\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"아이디(이메일)\"\r\n              value={email}\r\n              onChange={onChangeEmail}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"비밀번호\"\r\n              value={password}\r\n              onChange={onChangePassword}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              placeholder=\"비밀번호 확인\"\r\n              value={passwordCheck}\r\n              onChange={onChangePasswordCheck}\r\n            />\r\n            <input\r\n              type=\"test\"\r\n              placeholder=\"이름\"\r\n              value={name}\r\n              onChange={onChangeName}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"휴대폰 번호\"\r\n              value={phoneNum}\r\n              onChange={onChangePhoneNum}\r\n            />\r\n          </form>\r\n          <div className=\"reg-line\" />\r\n          <div>\r\n            <p>쿠팡 서비스약관에 동의해주세요.</p>\r\n            <div className=\"reg-agree-all\">\r\n              <input type=\"checkbox\" id=\"all\" />\r\n              <label htmlFor=\"all\">모두 동의합니다.</label>\r\n            </div>\r\n            <div className=\"reg-agree-form\">\r\n              <ul>\r\n                <li>\r\n                  <input type=\"checkbox\" id=\"age\" />\r\n                  <label htmlFor=\"age\">[필수] 만 14세 이상입니다</label>\r\n                </li>\r\n                <li>\r\n                  <input type=\"checkbox\" id=\"use\" />\r\n                  <label htmlFor=\"use\">[필수] 쿠팡 이용약관 동의.</label>\r\n                </li>\r\n                <li>\r\n                  <input type=\"checkbox\" id=\"elect\" />\r\n                  <label htmlFor=\"elect\">\r\n                    [필수] 전자금융거래 이용약관 동의.\r\n                  </label>\r\n                </li>\r\n                <li>\r\n                  <input type=\"checkbox\" id=\"collect\" />\r\n                  <label htmlFor=\"collect\">\r\n                    [필수] 개인정보 수집 및 이용 동의.\r\n                  </label>\r\n                </li>\r\n                <li>\r\n                  <input type=\"checkbox\" id=\"offer\" />\r\n                  <label htmlFor=\"offer\">[필수] 개인정보 제공 동의.</label>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n            <button className=\"reg-submit\" onClick={handleClick}>\r\n              동의하고 가입하기\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </main>\r\n      <footer className=\"reg-footer\">\r\n        <p className=\"reg-copy\">©Coupang Corp. All rights reserved</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './DetailPage.scss';\r\nimport LikeList from '../compoentns/LikeList';\r\nimport { AiOutlineHeart, AiFillStar } from 'react-icons/ai';\r\nimport { BsClock } from 'react-icons/bs';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nconst DetailPage = ({ match, setDetail, orderList, user, stores }) => {\r\n  const { store } = match.params;\r\n  const [detailItem, setDetailItem] = useState([]);\r\n  const [payment, setPayment] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const detail = stores.find((value) => value.name === store);\r\n    if (detail !== undefined) {\r\n      setDetailItem(detail);\r\n      setDetail(detail);\r\n    }\r\n  }, [store, setDetail, stores]);\r\n\r\n  useEffect(() => {\r\n    const sum = orderList.reduce((acc, cur) => {\r\n      return acc + cur.totalPrice;\r\n    }, 0);\r\n\r\n    setPayment(sum);\r\n  }, [orderList]);\r\n\r\n  if (detailItem.length === 0) {\r\n    return <div>로딩중</div>;\r\n  }\r\n\r\n  return (\r\n    <Container className=\"detail\">\r\n      <Row>\r\n        <div className=\"detail-img\">\r\n          <Col>\r\n            <div className=\"detail-info\">\r\n              <p className=\"info-name\">{detailItem.name}</p>\r\n              <div className=\"info-detail\">\r\n                <AiFillStar />\r\n                <p className=\"info-grade\">{detailItem.grade}</p>\r\n                <Link to={`/detail/${store}/review`}>\r\n                  <p>\r\n                    리뷰 <strong>{detailItem.feedNum}</strong>개 &gt;\r\n                  </p>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n        </div>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"detail-delivery-info\">\r\n            <div className=\"delivery-info-header\">\r\n              <div>\r\n                <BsClock />\r\n                <div> 21~31분</div>\r\n              </div>\r\n              <div className=\"delivery-store-info\">매장 / 원산지 정보</div>\r\n            </div>\r\n\r\n            <div className=\"delivery-price-info\">\r\n              <p className=\"delivery-text\">배달비</p>\r\n              <p>\r\n                <strong>{detailItem.deliveryCost}원</strong>\r\n              </p>\r\n            </div>\r\n            <div className=\"delivery-price-info\">\r\n              <p className=\"delivery-text\">최소주문</p>\r\n              <p>5000원</p>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <div className=\"menu-nav\">\r\n          <div>추천메뉴</div>\r\n          <div>메뉴소개</div>\r\n          <div>튀김류</div>\r\n          <div>토핑류</div>\r\n        </div>\r\n      </Row>\r\n      <Row>\r\n        <div className=\"line\"></div>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"detail-subMenu\">\r\n            {detailItem.menu.length > 0 &&\r\n              detailItem.menu.map((food) => (\r\n                <Link to={`/detail/${store}/${food.name}`} key={food.id}>\r\n                  <div className=\"subMenu\">\r\n                    <div className=\"subMenu-info\">\r\n                      <p className=\"food-name\">{food.name}</p>\r\n                      <p className=\"food-price\">{food.price}원</p>\r\n                      <p className=\"food-detail\">{food.detail}</p>\r\n                    </div>\r\n                    <div className=\"subMenu-img\">이미지</div>\r\n                  </div>\r\n                  <hr />\r\n                </Link>\r\n              ))}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <div className=\"detail-cart\">\r\n          {orderList.length > 0 && (\r\n            <Link to={`/detail/${store}/cart`}>\r\n              <button className=\"detail-addBtn\">\r\n                <p className=\"order-length\">{orderList.length} </p>\r\n                <p>카트보기</p>\r\n                <p className=\"order-price\">{payment}원</p>\r\n              </button>\r\n            </Link>\r\n          )}\r\n        </div>\r\n      </Row>\r\n    </Container>\r\n    // <div className=\"detail\">\r\n    //   <h2>디테일 페이지</h2>\r\n    //   <div className=\"detail-img\">\r\n    //     <div>이미지</div>\r\n    //   </div>\r\n    //   {user ? (\r\n    //     <LikeList user={user} store={store} detailItem={detailItem} />\r\n    //   ) : (\r\n    //     <Link to=\"/login\">\r\n    //       <AiOutlineHeart />\r\n    //     </Link>\r\n    //   )}\r\n\r\n    //   <div className=\"detail-cart\">\r\n    //     {orderList.length > 0 && (\r\n    //       <Link to={`/detail/${store}/cart`}>\r\n    //         <button>\r\n    //           <p>{orderList.length}</p>\r\n    //           <p>카트보기</p>\r\n    //           <p>{payment}</p>\r\n    //         </button>\r\n    //       </Link>\r\n    //     )}\r\n    //   </div>\r\n    //   <div className=\"detail-info\">\r\n    //     <div>가게 이름 : {detailItem.name}</div>\r\n    //     <AiFillStar />\r\n    //     <div>별점 : {detailItem.grade}</div>\r\n    //     <div>리뷰 개수 : {detailItem.feedNum}</div>\r\n    //   </div>\r\n    //   <div className=\"detail-delivery-info\">\r\n    //     <div>\r\n    //       <BsClock />\r\n    //       <div> 21~31분</div>\r\n    //       <div>매장 / 원산지 정보</div>\r\n    //     </div>\r\n    //     <div>배달비 : {detailItem.deliveryCost}</div>\r\n    //     <div>최소주문 : 5000원</div>\r\n    //   </div>\r\n\r\n    //   <div className=\"detail-review\">\r\n    //     {/* 후기 이동 */}\r\n    //     <Link to={`/detail/${store}/review`}>\r\n    //       <hr />\r\n    //       리뷰\r\n    //       <hr />\r\n    //     </Link>\r\n    //   </div>\r\n    //   <div className=\"detail-subMenu\">\r\n    //     <div>\r\n    //       메뉴 :\r\n    //       {detailItem.menu.length > 0 &&\r\n    //         detailItem.menu.map((food) => (\r\n    //           <Link to={`/detail/${store}/${food.name}`} key={food.id}>\r\n    //             <div>\r\n    //               <div>음식 이름 : {food.name}</div>\r\n    //               <div>음식 가격 : {food.price}</div>\r\n    //               <div>음식 설명 : {food.detail}</div>\r\n    //               <hr />\r\n    //             </div>\r\n    //           </Link>\r\n    //         ))}\r\n    //     </div>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default DetailPage;\r\n\r\n// {\r\n//    {user ? (\r\n//           <LikeList user={user} store={store} detailItem={detailItem} />\r\n//         ) : (\r\n//           <Link to=\"/login\">\r\n//             <AiOutlineHeart />\r\n//           </Link>\r\n//         )}\r\n// }\r\n","import React, { useEffect, useState } from 'react';\r\nimport Categories from '../compoentns/Categories';\r\nimport './CategoryPage.scss';\r\nimport Stores from '../compoentns/Stores';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Sort from '../modules/Sort';\r\n\r\nconst CategoryPage = ({\r\n  match,\r\n  categories,\r\n  stores,\r\n  recommand,\r\n  cost,\r\n  onDeliveryCost,\r\n  onRecommand,\r\n}) => {\r\n  const { category } = match.params;\r\n  const [catStores, setCatStores] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const sortCat = stores.filter((store) => store.category === category);\r\n    setCatStores(sortCat);\r\n  }, [category, stores]);\r\n\r\n  return (\r\n    <Container className=\"categoryPage\">\r\n      <Row>\r\n        <Col>\r\n          <Categories categories={categories} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Sort\r\n            onRecommand={onRecommand}\r\n            onDeliveryCost={onDeliveryCost}\r\n            recommand={recommand}\r\n            cost={cost}\r\n          />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <Stores stores={catStores} />\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n    // <div className=\"categoryPage\">\r\n    //   <h1>카테고리 페이지</h1>\r\n    //   <Categories categories={categories} />\r\n    //   <Stores stores={catStores} />\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default CategoryPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AddressPage = ({ user, setDefaultAddress }) => {\r\n  const [hasHomeAddress, setHasHomeAddress] = useState('');\r\n  const [hasWorkAddress, setHasWorkAddress] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (user.addrList.length > 0) {\r\n      const nextHasHomeAddress = user.addrList.find(\r\n        (addr) => addr.addrCat === '집',\r\n      );\r\n      const nextHasWorkAddress = user.addrList.find(\r\n        (addr) => addr.addrCat === '회사',\r\n      );\r\n      setHasHomeAddress(nextHasHomeAddress);\r\n      setHasWorkAddress(nextHasWorkAddress);\r\n    }\r\n  }, [user.addrList]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>주소 페이지</h1>\r\n      <Link to=\"/setAddress\">\r\n        <div>새 배달 주소 추가</div>\r\n      </Link>\r\n      {hasHomeAddress ? (\r\n        <div onClick={() => setDefaultAddress(hasHomeAddress.address)}>\r\n          {hasHomeAddress.address}\r\n        </div>\r\n      ) : (\r\n        <Link to=\"/setAddress\">\r\n          <div>집 추가</div>\r\n        </Link>\r\n      )}\r\n      {hasWorkAddress ? (\r\n        <div onClick={() => setDefaultAddress(hasWorkAddress.address)}>\r\n          {hasWorkAddress.address}\r\n        </div>\r\n      ) : (\r\n        <Link to=\"/setAddress\">\r\n          <div>회사 추가</div>\r\n        </Link>\r\n      )}\r\n      {user.addrList.length > 0 &&\r\n        user.addrList.map((addr) =>\r\n          addr.addrCat === '기타' ? (\r\n            <div\r\n              key={addr.address}\r\n              onClick={() => setDefaultAddress(addr.address)}\r\n            >\r\n              {addr.address}\r\n            </div>\r\n          ) : null,\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddressPage;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nconst ReviewPage = ({ match, stores }) => {\r\n  const { store } = match.params;\r\n  const [details, setDetails] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const nextDetails = stores.find((value) => value.name === store);\r\n    setDetails(nextDetails);\r\n  }, [stores, store]);\r\n\r\n  if (details.length === 0) {\r\n    return <div>로딩중</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p>후기 페이지</p>\r\n      <div>\r\n        {details.review.length > 0 &&\r\n          details.review.map((review) => (\r\n            <div key={review.id}>\r\n              <div>텍스트 : {review.text}</div>\r\n              <div>주문 음식 : {review.orderdMenu}</div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewPage;\r\n","import React, { useEffect, useState } from 'react';\r\nimport './OrderListPage.scss';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst OrderListPage = ({ match, detail, orderList, setOrderList, history }) => {\r\n  const { food } = match.params;\r\n  const [count, setCount] = useState(1);\r\n  const [totalPrice, setTotalPrice] = useState(undefined);\r\n  const [overlap, setOverlap] = useState(false);\r\n  const foodMenu = detail?.menu.find((m) => m.name === food);\r\n  const defaultPrice = foodMenu.price;\r\n  // detail?.menu : detail == false면 뒤에 실행 안함\r\n\r\n  useEffect(() => {\r\n    setTotalPrice(foodMenu.price);\r\n  }, [foodMenu]);\r\n\r\n  if (foodMenu === undefined || totalPrice === undefined) {\r\n    return <>로딩중</>;\r\n  }\r\n\r\n  const onMinusBtn = () => {\r\n    if (count > 1) {\r\n      setCount(count - 1);\r\n    }\r\n    const nextTotalPrice = defaultPrice * (count - 1);\r\n    setTotalPrice(nextTotalPrice);\r\n  };\r\n\r\n  const onPlusBtn = () => {\r\n    if (count < 20) setCount(count + 1);\r\n    const nextTotalPrice = defaultPrice * (count + 1);\r\n    setTotalPrice(nextTotalPrice);\r\n  };\r\n\r\n  const onToggleReqBtn = (e) => {\r\n    if (e.target.checked) {\r\n      foodMenu.reqMenu[e.target.id].check = true;\r\n    }\r\n  };\r\n\r\n  const onToggleSelBtn = (e) => {\r\n    const addCost = foodMenu.selectMenu[e.target.id].addCost;\r\n\r\n    if (e.target.checked) {\r\n      setTotalPrice(totalPrice + addCost);\r\n      foodMenu.selectMenu[e.target.id].check = true;\r\n    } else {\r\n      setTotalPrice(totalPrice - addCost);\r\n      foodMenu.selectMenu[e.target.id].check = false;\r\n    }\r\n  };\r\n\r\n  const onCancle = () => {\r\n    setOverlap(false);\r\n  };\r\n\r\n  const onChangeOrderList = () => {\r\n    orderList.splice(0, orderList.length);\r\n\r\n    const reqMenu = foodMenu.reqMenu\r\n      .filter((v) => v.check === true)\r\n      .map((el) => el.text);\r\n\r\n    const selMenu = foodMenu.selectMenu\r\n      .filter((v) => v.check === true)\r\n      .map((el) => el.text);\r\n\r\n    const nextOrderList = {\r\n      mainMenu: food,\r\n      count: count,\r\n      totalPrice: totalPrice,\r\n      reqMenu: reqMenu,\r\n      selMenu: selMenu,\r\n      store: detail.name,\r\n    };\r\n\r\n    setOrderList([...orderList, nextOrderList]);\r\n\r\n    history.go(-1);\r\n  };\r\n\r\n  const onSubmitBtn = () => {\r\n    if (orderList.length > 0) {\r\n      if (orderList[0].store !== detail.name) {\r\n        setOverlap(true);\r\n      }\r\n    } else {\r\n      const reqMenu = foodMenu.reqMenu\r\n        .filter((v) => v.check === true)\r\n        .map((el) => el.text);\r\n\r\n      const selMenu = foodMenu.selectMenu\r\n        .filter((v) => v.check === true)\r\n        .map((el) => el.text);\r\n\r\n      const nextOrderList = {\r\n        mainMenu: food,\r\n        count: count,\r\n        totalPrice: totalPrice,\r\n        reqMenu: reqMenu,\r\n        selMenu: selMenu,\r\n        store: detail.name,\r\n      };\r\n\r\n      setOrderList([...orderList, nextOrderList]);\r\n\r\n      history.go(-1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container className=\"orderList\">\r\n      <Row>\r\n        <div className=\"orderList-img\">이미지</div>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col>\r\n          <div className=\"orderList-header\">\r\n            <div className=\"food-name\">{food}</div>\r\n            <div className=\"food-detail\">{foodMenu.detail}</div>\r\n            <hr />\r\n            <div className=\"food-price\">\r\n              <div className=\"price-text\">가격 </div>\r\n              <div>{totalPrice}원</div>\r\n            </div>\r\n            <div className=\"food-count\">\r\n              <div className=\"count-text\">수량</div>\r\n              <div className=\"count-btn\">\r\n                <button onClick={onMinusBtn}>-</button>\r\n                <div>{count}</div>\r\n                <button onClick={onPlusBtn}>+</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <div className=\"add-text\">\r\n          <p>맛 선택</p>\r\n        </div>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"orderList-add\">\r\n            {foodMenu.reqMenu.map((add) => (\r\n              <div className=\"add-list\" key={add.id}>\r\n                <div className=\"list\">\r\n                  <input\r\n                    onChange={onToggleReqBtn}\r\n                    type=\"radio\"\r\n                    id={add.id}\r\n                    name=\"reqMenu\"\r\n                  />\r\n                  <label htmlFor={add.text}>{add.text}</label>\r\n                </div>\r\n                <div>+{add.addCost}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <div className=\"add-text\">\r\n          <p>추가 구성 선택</p>\r\n        </div>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"orderList-add\">\r\n            {foodMenu.selectMenu.map((add) => (\r\n              <div className=\"add-list\" key={add.id}>\r\n                <div className=\"list\">\r\n                  <input\r\n                    onChange={onToggleSelBtn}\r\n                    type=\"checkbox\"\r\n                    id={add.id}\r\n                    name=\"selectMenu\"\r\n                  />\r\n                  <label htmlFor={add.text}>{add.text}</label>\r\n                </div>\r\n                <div>+{add.addCost}</div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <div className=\"orderList-cart\" onClick={onSubmitBtn}>\r\n          <button>카트에 담기</button>\r\n        </div>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          {overlap && (\r\n            <div>\r\n              <p>같은 가게의 메뉴만을 담을 수 있습니다.</p>\r\n              <p>주문할 가게를 변경하실 경우 이전에 담은 메뉴가 삭제됩니다.</p>\r\n              <button onClick={onCancle}>취소</button>\r\n              <button onClick={onChangeOrderList}>새로담기</button>\r\n            </div>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n    //   <div className=\"orderList\">\r\n    //     <div className=\"orderList-header\">\r\n    //       <div className=\"food-img\">이미지</div>\r\n    //       <div className=\"food-name\">{food}</div>\r\n    //       <div className=\"food-price\">\r\n    //         <div>가격 </div>\r\n    //         <div>{totalPrice}원</div>\r\n    //       </div>\r\n    //       <div className=\"food-count\">\r\n    //         <div className=\"count-text\">수량</div>\r\n    //         <div className=\"count-btn\">\r\n    //           <button onClick={onMinusBtn}>-</button>\r\n    //           <div>{count}</div>\r\n    //           <button onClick={onPlusBtn}>+</button>\r\n    //         </div>\r\n    //       </div>\r\n    //     </div>\r\n\r\n    //     <div className=\"orderList-add\">\r\n    //       <div className=\"add-order1\">\r\n    //         <div className=\"add-text\">맛 선택</div>\r\n    //         {foodMenu.reqMenu.map((add) => (\r\n    //           <div className=\"add-card\" key={add.id}>\r\n    //             <div>\r\n    //               <input\r\n    //                 onChange={onToggleReqBtn}\r\n    //                 type=\"radio\"\r\n    //                 id={add.id}\r\n    //                 name=\"reqMenu\"\r\n    //               />\r\n    //               <label htmlFor={add.text}>{add.text}</label>\r\n    //             </div>\r\n    //             <div>+{add.addCost}</div>\r\n    //           </div>\r\n    //         ))}\r\n    //       </div>\r\n\r\n    //       <div className=\"add-order2\">\r\n    //         <div className=\"add-text\">추가 구성 선택</div>\r\n    //         {foodMenu.selectMenu.map((add) => (\r\n    //           <div className=\"add-card\" key={add.id}>\r\n    //             <div>\r\n    //               <input\r\n    //                 onChange={onToggleSelBtn}\r\n    //                 type=\"checkbox\"\r\n    //                 id={add.id}\r\n    //                 name=\"selectMenu\"\r\n    //               />\r\n    //               <label htmlFor={add.text}>{add.text}</label>\r\n    //             </div>\r\n    //             <div>+{add.addCost}</div>\r\n    //           </div>\r\n    //         ))}\r\n    //       </div>\r\n    //     </div>\r\n\r\n    //     <div className=\"orderList-cart\" onClick={onSubmitBtn}>\r\n    //       <button>카트에 담기</button>\r\n    //     </div>\r\n\r\n    //     {overlap && (\r\n    //       <div>\r\n    //         <p>같은 가게의 메뉴만을 담을 수 있습니다.</p>\r\n    //         <p>주문할 가게를 변경하실 경우 이전에 담은 메뉴가 삭제됩니다.</p>\r\n    //         <button onClick={onCancle}>취소</button>\r\n    //         <button onClick={onChangeOrderList}>새로담기</button>\r\n    //       </div>\r\n    //     )}\r\n    //   </div>\r\n  );\r\n};\r\n\r\nexport default OrderListPage;\r\n","import React, { useState } from 'react';\r\nimport './CartPage.scss';\r\nimport { GrFormClose } from 'react-icons/gr';\r\nimport { BiCaretRight } from 'react-icons/bi';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nconst CartPage = ({\r\n  orderList,\r\n  detail,\r\n  setOrderList,\r\n  history,\r\n  user,\r\n  defaultAddress,\r\n}) => {\r\n  const [lists, setLists] = useState(orderList);\r\n\r\n  const onCloseBtn = (idx) => {\r\n    if (lists.length > 1) {\r\n      const newLists = lists.filter((_, index) => index !== idx);\r\n      setLists(newLists);\r\n      setOrderList(lists);\r\n    } else {\r\n      alert('최소 한가지 선택');\r\n    }\r\n  };\r\n\r\n  const onAddMenu = () => {\r\n    setOrderList(lists);\r\n    history.go(-1);\r\n  };\r\n\r\n  const payment = lists.reduce((acc, cur) => {\r\n    return acc + cur.totalPrice;\r\n  }, 0);\r\n\r\n  const onPayBtn = () => {\r\n    // 이 로직은 주문-> 배달 완료일 때 가능한 로직\r\n    // 임시로 결제하기 눌렀을 때 배달이 완료됐다고 가정\r\n\r\n    const orderInfo = {\r\n      orderMenu: lists,\r\n      orderDate: getFormatDate(),\r\n      delivCheck: true,\r\n    };\r\n\r\n    user.orderHistory.push(orderInfo);\r\n    console.log(lists);\r\n    setOrderList([]);\r\n    history.push('/');\r\n  };\r\n\r\n  if (orderList.length === 0) return <div></div>;\r\n  return (\r\n    <Container className=\"cart\">\r\n      <Row>\r\n        <Col>\r\n          <div className=\"cart-header\">\r\n            <h4>카트</h4>\r\n            <p className=\"header-building\">{defaultAddress} (으)로 배달</p>\r\n            <p className=\"header-address\">주소</p>\r\n          </div>\r\n          <hr />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"cart-main\">\r\n            <p className=\"main-name\">{detail.name}</p>\r\n            <hr />\r\n            {lists.map((list, idx) => (\r\n              <div key={idx}>\r\n                <div className=\"main-cancel\">\r\n                  <p>{list.mainMenu}</p>\r\n                  <GrFormClose onClick={() => onCloseBtn(idx)} />\r\n                </div>\r\n                <p>{list.reqMunu}</p>\r\n                <p>{list.selMenu}</p>\r\n                <p>{list.totalPrice}원</p>\r\n              </div>\r\n            ))}\r\n            <hr />\r\n            <div className=\"main-addMenu\">\r\n              <p onClick={onAddMenu}>+메뉴추가</p>\r\n            </div>\r\n            <hr />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"cart-coupon\">\r\n            <p className=\"coupon-title\">할인쿠폰</p>\r\n            <div className=\"coupon-card\">\r\n              <p className=\"card-title\">\r\n                사용가능 쿠폰{' '}\r\n                <span>\r\n                  0장 <BiCaretRight />\r\n                </span>\r\n              </p>\r\n              <div className=\"coupon-inner\">\r\n                <div>\r\n                  <p>쿠폰을 선택해 주세요</p>\r\n                </div>\r\n                <button>선택</button>\r\n              </div>\r\n            </div>\r\n            <hr />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <div className=\"cart-list\">\r\n            <div>\r\n              <p>주문금액</p>\r\n              <p>{payment}원</p>\r\n            </div>\r\n            <div>\r\n              <p>배달비</p>\r\n              <p>{detail.deliveryCost}원</p>\r\n            </div>\r\n            <hr />\r\n            <div className=\"list-amount\">\r\n              <p>총 결제금액</p>\r\n              <p>{detail.deliveryCost + payment}원</p>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row>\r\n        <Col>\r\n          <div className=\"cart-request\">\r\n            <p className=\"request-header\">요청사항</p>\r\n            <div>\r\n              <p>가게 사장님에게</p>\r\n              <textarea placeholder=\"예) 견과류는 빼주세요\"></textarea>\r\n              <input type=\"checkbox\" />\r\n              <label htmlFor=\"request\">일회용 수저, 포크는 빼주세요</label>\r\n            </div>\r\n            <div>\r\n              <p>배달 기사님에게</p>\r\n              <textarea placeholder=\"초인종 누르고 문 앞\"></textarea>\r\n            </div>\r\n            <hr />\r\n\r\n            <div>\r\n              <p className=\"pay-select\">결제수단</p>\r\n              <p>KB국민카드 ********</p>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <div className=\"cart-payment\">\r\n          <button onClick={onPayBtn}>\r\n            <p>{detail.deliveryCost + payment}원 결제하기</p>\r\n          </button>\r\n        </div>\r\n      </Row>\r\n    </Container>\r\n    // <div className=\"cart\">\r\n    //   <div className=\"cart-header\">\r\n    //     <h1>카트</h1>\r\n    //     <p className=\"header-building\">대승빌딩 (으)로 배달</p>\r\n    //     <p className=\"header-address\">주소</p>\r\n    //   </div>\r\n    //   <hr />\r\n\r\n    //   <div className=\"cart-main\">\r\n    //     <div>\r\n    //       {lists.map((list, idx) => (\r\n    //         <div key={idx}>\r\n    //           <p>{list.mainMenu}</p>\r\n    //           <p>{list.reqMunu}</p>\r\n    //           <p>{list.selMenu}</p>\r\n    //           <p>{list.totalPrice}</p>\r\n    //           <GrFormClose onClick={() => onCloseBtn(idx)} />\r\n    //         </div>\r\n    //       ))}\r\n    //     </div>\r\n    //     <hr />\r\n    //     <div className=\"main-addMenu\">\r\n    //       <p onClick={onAddMenu}>+메뉴추가</p>\r\n    //     </div>\r\n    //   </div>\r\n    //   <hr />\r\n    //   <div className=\"cart-coupon\">\r\n    //     <p className=\"coupon-title\">할인쿠폰</p>\r\n    //     <div className=\"coupon-card\">\r\n    //       <p className=\"card-title\">사용가능 쿠폰 0장</p>\r\n    //       <div className=\"coupon-inner\">\r\n    //         <div>\r\n    //           <p>쿠폰을 선택해 주세요</p>\r\n    //         </div>\r\n    //         <button>선택</button>\r\n    //       </div>\r\n    //     </div>\r\n    //   </div>\r\n    //   <hr />\r\n    //   <div className=\"cart-list\">\r\n    //     <div>\r\n    //       <p>주문금액</p>\r\n    //       <p>{payment}원</p>\r\n    //     </div>\r\n    //     <div>\r\n    //       <p>배달비</p>\r\n    //       <p>{detail.deliveryCost}원</p>\r\n    //     </div>\r\n    //     <div>\r\n    //       <p className=\"list-amount\">총 결제금액</p>\r\n    //       <p>{detail.deliveryCost + payment}원</p>\r\n    //     </div>\r\n    //   </div>\r\n    //   <hr />\r\n\r\n    //   <div className=\"cart-request\">\r\n    //     <p className=\"request-header\">요청사항</p>\r\n    //     <div>\r\n    //       <p>가게 사장님에게</p>\r\n    //       <textarea placeholder=\"예) 견과류는 빼주세요\"></textarea>\r\n    //       <input type=\"checkbox\" />\r\n    //       <label htmlFor=\"request\">일회용 수저, 포크는 빼주세요</label>\r\n    //     </div>\r\n    //     <div>\r\n    //       <p>배달 기사님에게</p>\r\n    //       <textarea placeholder=\"초인종 누르고 문 앞\"></textarea>\r\n    //     </div>\r\n    //     <hr />\r\n\r\n    //     <div>\r\n    //       <p>결제수단</p>\r\n    //       <p>KB국민카드 ********</p>\r\n    //     </div>\r\n    //   </div>\r\n    //   <div className=\"cart-payment\">\r\n    //     <button onClick={onPayBtn}>\r\n    //       {detail.deliveryCost + payment}원 결제하기\r\n    //     </button>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\nexport default CartPage;\r\n\r\nfunction getFormatDate() {\r\n  const date = new Date();\r\n  let year = date.getFullYear(); //yyyy\r\n  let month = 1 + date.getMonth(); //M\r\n  month = month >= 10 ? month : '0' + month; //month 두자리로 저장\r\n  let day = date.getDate(); //d\r\n  day = day >= 10 ? day : '0' + day; //day 두자리로 저장\r\n\r\n  let hours = date.getHours();\r\n  hours = hours >= 10 ? hours : '0' + hours; //day 두자리로 저장\r\n\r\n  let min = date.getMinutes();\r\n  min = min >= 10 ? min : '0' + min; //day 두자리로 저장\r\n\r\n  return `${year}-${month}-${day} ${hours}:${min}`; //'-' 추가하여 yyyy-mm-dd 형태 생성 가능\r\n}\r\n","import React from 'react';\r\n\r\nconst Recept = ({ modal, order, detail }) => {\r\n  console.log(modal);\r\n  console.log(order);\r\n\r\n  const sumPrice = order.orderMenu.reduce((acc, cur) => {\r\n    return acc + cur.totalPrice;\r\n  }, 0);\r\n\r\n  return (\r\n    <div>\r\n      {modal && (\r\n        <div>\r\n          <h1>영수증</h1>\r\n          <hr />\r\n          <div className=\"recept-card\">\r\n            <h1>{order.orderMenu[0].store}</h1>\r\n            <p>{order.orderDate}</p>\r\n            {order.orderMenu.map((list, index) => (\r\n              <div key={index}>\r\n                <div>{list.mainMenu}</div>\r\n                <div>{list.reqMenu}</div>\r\n                <div>{list.selMenu}</div>\r\n                <div>{list.totalPrice}</div>\r\n              </div>\r\n            ))}\r\n            <hr />\r\n            <div>\r\n              <p>주문금액 :{sumPrice}</p>\r\n              <p>배달비 : {detail.deliveryCost}</p>\r\n              <p>소액 주문비 : 0</p>\r\n              <p>할인금액 : 0</p>\r\n            </div>\r\n            <hr />\r\n            <h1>총 결제금액 : {sumPrice + detail.deliveryCost}</h1>\r\n          </div>\r\n          <p>KB국민카드 ****0000** 결제</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recept;\r\n","import React, { useState } from 'react';\r\nimport Recept from '../compoentns/Recept';\r\n\r\nconst OrderHistoryPage = ({ user, detail }) => {\r\n  const [modal, setModal] = useState(false);\r\n\r\n  const onModalBtn = () => {\r\n    setModal(!modal);\r\n  };\r\n\r\n  const onReviewBtn = () => {};\r\n\r\n  if (user.orderHistory.length === 0) {\r\n    return <div>주문 기록 없음</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {user.orderHistory.map((order, index) => (\r\n        <div key={index}>\r\n          <p>{order.orderMenu[0].store}</p>\r\n          <p>{order.orderDate}</p>\r\n          {order.delivCheck ? <p>배달 완료</p> : <p>배달 취소</p>}\r\n          {order.orderMenu.map((list, index) => (\r\n            <div key={index}>\r\n              <div>{list.count}</div>\r\n              <div>{list.mainMenu}</div>\r\n              <div>{list.reqMenu}</div>\r\n              <div>{list.selMenu}</div>\r\n            </div>\r\n          ))}\r\n          <p>\r\n            {order.orderMenu.reduce((acc, cur) => {\r\n              return acc + cur.totalPrice;\r\n            }, 0)}\r\n          </p>\r\n\r\n          <p onClick={onReviewBtn}>후기 쓰기</p>\r\n          <p>재주문하기</p>\r\n          <button onClick={onModalBtn}>영수증보기</button>\r\n          <Recept modal={modal} order={order} detail={detail} />\r\n          <hr />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderHistoryPage;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst LogoutButton = ({ logout, history }) => {\r\n  const handleClick = () => {\r\n    logout();\r\n    history.push('/');\r\n  };\r\n\r\n  return <button onClick={handleClick}>로그아웃</button>;\r\n};\r\n\r\nexport default withRouter(LogoutButton);\r\n","import React from 'react';\r\nimport LogoutButton from '../compoentns/LogoutButton';\r\n\r\nconst SettingPage = ({ authenticated, logout }) => {\r\n  return (\r\n    <div>\r\n      <h1>설정 페이지</h1>\r\n      <div>배달 현황 알림</div>\r\n      <div>쿠폰&amp;혜택 정보 알림</div>\r\n      <LogoutButton logout={logout} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingPage;\r\n","import React from 'react';\r\nimport DaumPostcode from 'react-daum-postcode';\r\n\r\nconst Postcode = ({ onAddressChange, onClose }) => {\r\n  const handleComplete = (data) => {\r\n    let fullAddress = data.address;\r\n    let extraAddress = '';\r\n\r\n    if (data.addressType === 'R') {\r\n      if (data.bname !== '') {\r\n        extraAddress += data.bname;\r\n      }\r\n      if (data.buildingName !== '') {\r\n        extraAddress +=\r\n          extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName;\r\n      }\r\n      fullAddress += extraAddress !== '' ? ` (${extraAddress})` : '';\r\n    }\r\n\r\n    onAddressChange(fullAddress);\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <DaumPostcode onComplete={handleComplete} />;\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Postcode;\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Postcode from '../compoentns/Postcode';\r\n\r\nconst SetAddressPage = ({ user, setDefaultAddress }) => {\r\n  const [addr, setAddr] = useState('');\r\n  const [text, setText] = useState('');\r\n  const [addressCat, setAddressCat] = useState('');\r\n  const [apiToggle, setApiToggle] = useState(true);\r\n\r\n  const onInputText = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n\r\n  const onAddrCat = (e) => {\r\n    setAddressCat(e.target.innerText);\r\n  };\r\n\r\n  const onAddAddress = () => {\r\n    const nextAddr = addr.split(', ');\r\n\r\n    const idx = nextAddr[0].indexOf('(');\r\n\r\n    const address = nextAddr[0].slice(0, idx);\r\n    const subAddress = text;\r\n    const building =\r\n      nextAddr[1] !== undefined\r\n        ? nextAddr[1].slice(0, nextAddr[1].length - 1)\r\n        : null;\r\n    const addrCat = addressCat === '' ? '기타' : addressCat;\r\n    user.addrList.push({\r\n      address,\r\n      subAddress,\r\n      building,\r\n      addrCat,\r\n    });\r\n\r\n    setDefaultAddress(address);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>배달지 상세 정보</h1>\r\n      {apiToggle ? (\r\n        <Postcode\r\n          onAddressChange={setAddr}\r\n          onClose={() => setApiToggle(false)}\r\n        />\r\n      ) : (\r\n        <div>\r\n          <div>{addr}</div>\r\n          <div>메인 주소</div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"상세주소(아파트/동/호)\"\r\n            value={text}\r\n            onChange={onInputText}\r\n          />\r\n          <div>상세 주소</div>\r\n          <ul onClick={onAddrCat}>\r\n            <li>집</li>\r\n            <li>회사</li>\r\n            <li>기타</li>\r\n          </ul>\r\n          <div>지도에서 확인하기</div>\r\n\r\n          <Link to=\"/\">\r\n            <button onClick={onAddAddress}>완료</button>\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SetAddressPage;\r\n","import React from 'react';\r\nimport './Navigation.scss';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { Link } from 'react-router-dom';\r\nimport { BiHomeAlt, BiSearch, BiHeart, BiCalendarCheck } from 'react-icons/bi';\r\nimport { BsPerson } from 'react-icons/bs';\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <Container>\r\n      <Row className=\"nav-main\">\r\n        <Col className=\"nav-item\">\r\n          <Link to=\"/\">\r\n            <div className=\"nav-item-body\">\r\n              <BiHomeAlt />\r\n              <p>홈</p>\r\n            </div>\r\n          </Link>\r\n        </Col>\r\n        <Col className=\"nav-item\">\r\n          <Link to=\"/search\">\r\n            <div className=\"nav-item-body\">\r\n              <BiSearch />\r\n              <p>검색</p>\r\n            </div>\r\n          </Link>\r\n        </Col>\r\n        <Col className=\"nav-item\">\r\n          <Link to=\"/order\">\r\n            <div className=\"nav-item-body\">\r\n              <BiHeart />\r\n              <p>즐겨찾기</p>\r\n            </div>\r\n          </Link>\r\n        </Col>\r\n        <Col className=\"nav-item\">\r\n          <Link to=\"/favorite\">\r\n            <div className=\"nav-item-body\">\r\n              <BiCalendarCheck />\r\n              <p>주문내역</p>\r\n            </div>\r\n          </Link>\r\n        </Col>\r\n        <Col className=\"nav-item\">\r\n          <Link to=\"/profile\">\r\n            <div className=\"nav-item-body\">\r\n              <BsPerson />\r\n              <p>My</p>\r\n            </div>\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport FavoritePage from './pages/FavoritePage';\r\nimport HomePage from './pages/HomePage';\r\nimport ProfilePage from './pages/ProfilePage';\r\nimport SearchPage from './pages/SearchPage';\r\nimport { singIn, register } from './modules/auth';\r\nimport AuthRoute from './compoentns/AuthRoute';\r\nimport LoginPage from './pages/LoginPage';\r\nimport RegisterPage from './pages/RegisterPage';\r\nimport DetailPage from './pages/DetailPage';\r\nimport CategoryPage from './pages/CategoryPage';\r\nimport AddressPage from './pages/AddressPage';\r\nimport axios from 'axios';\r\nimport ReviewPage from './pages/ReviewPage';\r\nimport OrderListPage from './pages/OrderListPage';\r\nimport CartPage from './pages/CartPage';\r\nimport OrderHistoryPage from './pages/OrderHistoryPage';\r\nimport SettingPage from './pages/SettingPage';\r\nimport SetAddressPage from './pages/SetAddressPage';\r\nimport Navigation from './compoentns/Navigation';\r\nimport './App.scss';\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [categories, setCategories] = useState([]);\r\n  const [detail, setDetail] = useState(undefined);\r\n  const [orderList, setOrderList] = useState([]);\r\n  const [stores, setStores] = useState([]);\r\n  const [defaultAddress, setDefaultAddress] = useState('설정');\r\n  const [recommand, setRecommand] = useState(false);\r\n  const [cost, setCost] = useState(false);\r\n\r\n  const authenticated = user !== null; // user가 존재하지 않으면 false, 존재하면 true\r\n\r\n  const login = ({ email, password }) => setUser(singIn({ email, password }));\r\n  const logout = () => setUser(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:4000/stores');\r\n\r\n        setStores(response.data);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:4000/categories');\r\n        setCategories(response.data);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const onRecommand = useCallback(() => {\r\n    recommand\r\n      ? setStores([...stores.sort((a, b) => b.grade - a.grade)])\r\n      : setStores([...stores.sort((a, b) => a.grade - b.grade)]);\r\n\r\n    setRecommand((recommand) => !recommand);\r\n  }, [stores, recommand, setStores]);\r\n\r\n  const onDeliveryCost = useCallback(() => {\r\n    cost\r\n      ? setStores([...stores.sort((a, b) => b.deliveryCost - a.deliveryCost)])\r\n      : setStores([...stores.sort((a, b) => a.deliveryCost - b.deliveryCost)]);\r\n\r\n    setCost((cost) => !cost);\r\n  }, [stores, cost, setStores]);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Navigation />\r\n      <Switch>\r\n        <Route\r\n          path=\"/\"\r\n          exact={true}\r\n          render={(props) => (\r\n            <HomePage\r\n              categories={categories}\r\n              orderList={orderList}\r\n              user={user}\r\n              stores={stores}\r\n              setStores={setStores}\r\n              defaultAddress={defaultAddress}\r\n              onRecommand={onRecommand}\r\n              onDeliveryCost={onDeliveryCost}\r\n              recommand={recommand}\r\n              cost={cost}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n\r\n        <Route\r\n          path=\"/detail/:store\"\r\n          exact={true}\r\n          render={(props) => (\r\n            <DetailPage\r\n              AuthRoute={AuthRoute}\r\n              authenticated={authenticated}\r\n              setDetail={setDetail}\r\n              orderList={orderList}\r\n              user={user}\r\n              stores={stores}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n\r\n        <Route\r\n          path=\"/detail/:store/cart\"\r\n          exact={true}\r\n          render={(props) => (\r\n            <CartPage\r\n              orderList={orderList}\r\n              detail={detail}\r\n              setOrderList={setOrderList}\r\n              setUser={setUser}\r\n              user={user}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n\r\n        <Route\r\n          path=\"/detail/:store/review\"\r\n          exact={true}\r\n          render={(props) => <ReviewPage stores={stores} {...props} />}\r\n        />\r\n\r\n        <Route\r\n          path=\"/detail/:store/:food\"\r\n          exact={true}\r\n          render={(props) => (\r\n            <OrderListPage\r\n              detail={detail}\r\n              orderList={orderList}\r\n              setOrderList={setOrderList}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n\r\n        <Route\r\n          path=\"/search\"\r\n          render={(props) => (\r\n            <SearchPage categories={categories} stores={stores} {...props} />\r\n          )}\r\n        />\r\n\r\n        <AuthRoute\r\n          authenticated={authenticated}\r\n          path=\"/order\"\r\n          render={(props) => (\r\n            <OrderHistoryPage user={user} detail={detail} {...props} />\r\n          )}\r\n        />\r\n\r\n        <AuthRoute\r\n          authenticated={authenticated}\r\n          path=\"/favorite\"\r\n          render={(props) => <FavoritePage user={user} {...props} />}\r\n        />\r\n\r\n        <Route\r\n          path=\"/category/:category\"\r\n          render={(props) => (\r\n            <CategoryPage\r\n              categories={categories}\r\n              stores={stores}\r\n              onRecommand={onRecommand}\r\n              onDeliveryCost={onDeliveryCost}\r\n              recommand={recommand}\r\n              cost={cost}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n        <AuthRoute\r\n          authenticated={authenticated}\r\n          path=\"/address\"\r\n          render={(props) => (\r\n            <AddressPage user={user} setDefaultAddress={setDefaultAddress} />\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/setAddress\"\r\n          render={(props) => (\r\n            <SetAddressPage\r\n              user={user}\r\n              setDefaultAddress={setDefaultAddress}\r\n              {...props}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/setting\"\r\n          render={(props) => <SettingPage logout={logout} {...props} />}\r\n        />\r\n\r\n        <Route\r\n          path=\"/register\"\r\n          render={(props) => <RegisterPage register={register} {...props} />}\r\n        />\r\n        <AuthRoute\r\n          authenticated={authenticated}\r\n          path=\"/profile\"\r\n          render={(props) => <ProfilePage user={user} {...props} />}\r\n        />\r\n        <Route\r\n          path=\"/login\"\r\n          render={(props) => (\r\n            <LoginPage authenticated={authenticated} login={login} {...props} />\r\n          )}\r\n        />\r\n        <Route render={({ location }) => <div>존재하지 않는 페이지</div>} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n// const [stores, setStores] = useState(createBulkStores);\r\n\r\n// function createBulkStores() {\r\n//   const array = [];\r\n//   for (let i = 1; i <= 2500; i++) {\r\n//     array.push({\r\n//       id: i,\r\n//       name: `${i}번째 가게`,\r\n//       franchise: true,\r\n//       category: `${i} 임시 가게`,\r\n//       grade: i,\r\n//       feedNum: i,\r\n//       deliveryCost: i + 500,\r\n//       menu: {\r\n//         id: i,\r\n//         name: `${i} 임시 메뉴`,\r\n//         price: 3000,\r\n//         detail: `${i} 임시 세부 메뉴`,\r\n//         reqMenu: {\r\n//           id: i,\r\n//           text: `${i} 임시 맛`,\r\n//           addCost: 0,\r\n//           check: false,\r\n//         },\r\n//         selMenu: {\r\n//           id: i,\r\n//           text: `${i} 스콘`,\r\n//           addCost: 1000,\r\n//           check: false,\r\n//         },\r\n//       },\r\n//       review: {\r\n//         id: i,\r\n//         user: '최 땡땡',\r\n//         date: '2021-02-01',\r\n//         grade: 4.4,\r\n//         photoCheck: true,\r\n//         text: `${i} 후기`,\r\n//         orderMenu: `${i} 아인슈페너`,\r\n//       },\r\n//     });\r\n//   }\r\n\r\n//   return array;\r\n// }\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}